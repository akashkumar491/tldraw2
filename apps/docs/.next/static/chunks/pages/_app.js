/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "../../node_modules/next-themes/dist/index.module.js":
/*!***********************************************************!*\
  !*** ../../node_modules/next-themes/dist/index.module.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ThemeProvider\": function() { return /* binding */ $; },\n/* harmony export */   \"useTheme\": function() { return /* binding */ y; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nconst c=[\"light\",\"dark\"],i=\"(prefers-color-scheme: dark)\",d=\"undefined\"==typeof window,u=/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0),h={setTheme:e=>{},themes:[]},y=()=>{var e;return null!==(e=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(u))&&void 0!==e?e:h},$=r=>(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(u)?/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,r.children):/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(f,r),v=[\"light\",\"dark\"],f=({forcedTheme:t,disableTransitionOnChange:n=!1,enableSystem:l=!0,enableColorScheme:m=!0,storageKey:d=\"theme\",themes:h=v,defaultTheme:y=(l?\"system\":\"light\"),attribute:$=\"data-theme\",value:f,children:w,nonce:T})=>{const[E,k]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>S(d,y)),[C,L]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>S(d)),x=f?Object.values(f):h,I=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{let t=e;if(!t)return;\"system\"===e&&l&&(t=p());const r=f?f[t]:t,o=n?b():null,a=document.documentElement;if(\"class\"===$?(a.classList.remove(...x),r&&a.classList.add(r)):r?a.setAttribute($,r):a.removeAttribute($),m){const e=c.includes(y)?y:null,n=c.includes(t)?t:e;a.style.colorScheme=n}null==o||o()},[]),O=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{k(e);try{localStorage.setItem(d,e)}catch(e){}},[t]),M=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{const n=p(e);L(n),\"system\"===E&&l&&!t&&I(\"system\")},[E,t]);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{const e=window.matchMedia(i);return e.addListener(M),M(e),()=>e.removeListener(M)},[M]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{const e=e=>{e.key===d&&O(e.newValue||y)};return window.addEventListener(\"storage\",e),()=>window.removeEventListener(\"storage\",e)},[O]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{I(null!=t?t:E)},[t,E]);const A=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({theme:E,setTheme:O,forcedTheme:t,resolvedTheme:\"system\"===E?C:E,themes:l?[...h,\"system\"]:h,systemTheme:l?C:void 0}),[E,O,t,C,l,h]);/*#__PURE__*/return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(u.Provider,{value:A},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(g,{forcedTheme:t,disableTransitionOnChange:n,enableSystem:l,enableColorScheme:m,storageKey:d,themes:h,defaultTheme:y,attribute:$,value:f,children:w,attrs:x,nonce:T}),w)},g=/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(({forcedTheme:t,storageKey:n,attribute:r,enableSystem:o,enableColorScheme:a,defaultTheme:s,value:l,attrs:m,nonce:d})=>{const u=\"system\"===s,h=\"class\"===r?`var d=document.documentElement,c=d.classList;c.remove(${m.map(e=>`'${e}'`).join(\",\")});`:`var d=document.documentElement,n='${r}',s='setAttribute';`,y=a?c.includes(s)&&s?`if(e==='light'||e==='dark'||!e)d.style.colorScheme=e||'${s}'`:\"if(e==='light'||e==='dark')d.style.colorScheme=e\":\"\",$=(e,t=!1,n=!0)=>{const o=l?l[e]:e,s=t?e+\"|| ''\":`'${o}'`;let m=\"\";return a&&n&&!t&&c.includes(e)&&(m+=`d.style.colorScheme = '${e}';`),\"class\"===r?m+=t||o?`c.add(${s})`:\"null\":o&&(m+=`d[s](n,${s})`),m},v=t?`!function(){${h}${$(t)}}()`:o?`!function(){try{${h}var e=localStorage.getItem('${n}');if('system'===e||(!e&&${u})){var t='${i}',m=window.matchMedia(t);if(m.media!==t||m.matches){${$(\"dark\")}}else{${$(\"light\")}}}else if(e){${l?`var x=${JSON.stringify(l)};`:\"\"}${$(l?\"x[e]\":\"e\",!0)}}${u?\"\":\"else{\"+$(s,!1,!1)+\"}\"}${y}}catch(e){}}()`:`!function(){try{${h}var e=localStorage.getItem('${n}');if(e){${l?`var x=${JSON.stringify(l)};`:\"\"}${$(l?\"x[e]\":\"e\",!0)}}else{${$(s,!1,!1)};}${y}}catch(t){}}();`;/*#__PURE__*/return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"script\",{nonce:d,dangerouslySetInnerHTML:{__html:v}})},()=>!0),S=(e,t)=>{if(d)return;let n;try{n=localStorage.getItem(e)||void 0}catch(e){}return n||t},b=()=>{const e=document.createElement(\"style\");return e.appendChild(document.createTextNode(\"*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")),document.head.appendChild(e),()=>{window.getComputedStyle(document.body),setTimeout(()=>{document.head.removeChild(e)},1)}},p=e=>(e||(e=window.matchMedia(i)),e.matches?\"dark\":\"light\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQtdGhlbWVzL2Rpc3QvaW5kZXgubW9kdWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEksc0dBQXNHLG9EQUFDLFlBQVksY0FBYyxXQUFXLFFBQVEsTUFBTSxpQkFBaUIsaURBQUMscUJBQXFCLE1BQU0saURBQUMsaUJBQWlCLDBEQUFlLENBQUMsMkNBQUMsK0JBQStCLDBEQUFlLDZCQUE2Qiw4TUFBOE0sSUFBSSxXQUFXLCtDQUFDLG1CQUFtQiwrQ0FBQyxvQ0FBb0Msa0RBQUMsS0FBSyxRQUFRLGFBQWEseUJBQXlCLHlEQUF5RCw4R0FBOEcsaURBQWlELHNCQUFzQixhQUFhLE9BQU8sa0RBQUMsS0FBSyxLQUFLLElBQUksMEJBQTBCLFdBQVcsUUFBUSxrREFBQyxLQUFLLGFBQWEsc0NBQXNDLFFBQVEsZ0RBQUMsTUFBTSw2QkFBNkIscURBQXFELE1BQU0sZ0RBQUMsTUFBTSxZQUFZLDZCQUE2Qix3RkFBd0YsTUFBTSxnREFBQyxNQUFNLGVBQWUsUUFBUSxRQUFRLDhDQUFDLE9BQU8sa0hBQWtILGlCQUFpQixvQkFBb0IsMERBQWUsYUFBYSxRQUFRLGNBQWMsMERBQWUsSUFBSSxpS0FBaUssS0FBSyxnQkFBZ0IsMkNBQUMsR0FBRyxpSEFBaUgsSUFBSSxpRkFBaUYsV0FBVyxhQUFhLEVBQUUsY0FBYyxFQUFFLHVDQUF1QyxFQUFFLG1CQUFtQixpRkFBaUYsRUFBRSwyRUFBMkUsbUNBQW1DLEVBQUUsR0FBRyxTQUFTLDhEQUE4RCxFQUFFLEVBQUUsZ0NBQWdDLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQkFBa0IsRUFBRSxFQUFFLEVBQUUsTUFBTSxtQkFBbUIsSUFBSSxFQUFFLEVBQUUsOEJBQThCLEVBQUUsR0FBRyx3QkFBd0IsRUFBRSxHQUFHLFNBQVMsRUFBRSx5QkFBeUIsMkJBQTJCLEVBQUUsV0FBVyxLQUFLLEVBQUUsYUFBYSxXQUFXLEVBQUUsV0FBVyxtQkFBbUIsS0FBSyxFQUFFLG9CQUFvQixFQUFFLFdBQVcsZUFBZSxFQUFFLEVBQUUsR0FBRyxXQUFXLGlCQUFpQixJQUFJLEVBQUUsRUFBRSw4QkFBOEIsRUFBRSxHQUFHLE1BQU0sRUFBRSxXQUFXLG1CQUFtQixLQUFLLEVBQUUsb0JBQW9CLEtBQUssRUFBRSxhQUFhLEVBQUUsR0FBRyxXQUFXLEdBQUcsRUFBRSxvQkFBb0IsMERBQWUsV0FBVyxpQ0FBaUMsVUFBVSxFQUFFLG1CQUFtQixZQUFZLE1BQU0sSUFBSSxrQ0FBa0MsVUFBVSxZQUFZLFFBQVEsd0NBQXdDLGdEQUFnRCxrQ0FBa0MsK0JBQStCLDZCQUE2Qiw4QkFBOEIsMEJBQTBCLHNDQUFzQyx1REFBdUQsNkJBQTZCLEtBQUssNkRBQXNHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC10aGVtZXMvZGlzdC9pbmRleC5tb2R1bGUuanM/MjViZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZSx7dXNlQ29udGV4dCBhcyB0LEZyYWdtZW50IGFzIG4sdXNlU3RhdGUgYXMgcix1c2VDYWxsYmFjayBhcyBvLHVzZUVmZmVjdCBhcyBhLHVzZU1lbW8gYXMgcyxtZW1vIGFzIGwsY3JlYXRlQ29udGV4dCBhcyBtfWZyb21cInJlYWN0XCI7Y29uc3QgYz1bXCJsaWdodFwiLFwiZGFya1wiXSxpPVwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiLGQ9XCJ1bmRlZmluZWRcIj09dHlwZW9mIHdpbmRvdyx1PS8qI19fUFVSRV9fKi9tKHZvaWQgMCksaD17c2V0VGhlbWU6ZT0+e30sdGhlbWVzOltdfSx5PSgpPT57dmFyIGU7cmV0dXJuIG51bGwhPT0oZT10KHUpKSYmdm9pZCAwIT09ZT9lOmh9LCQ9cj0+dCh1KT8vKiNfX1BVUkVfXyovZS5jcmVhdGVFbGVtZW50KG4sbnVsbCxyLmNoaWxkcmVuKTovKiNfX1BVUkVfXyovZS5jcmVhdGVFbGVtZW50KGYsciksdj1bXCJsaWdodFwiLFwiZGFya1wiXSxmPSh7Zm9yY2VkVGhlbWU6dCxkaXNhYmxlVHJhbnNpdGlvbk9uQ2hhbmdlOm49ITEsZW5hYmxlU3lzdGVtOmw9ITAsZW5hYmxlQ29sb3JTY2hlbWU6bT0hMCxzdG9yYWdlS2V5OmQ9XCJ0aGVtZVwiLHRoZW1lczpoPXYsZGVmYXVsdFRoZW1lOnk9KGw/XCJzeXN0ZW1cIjpcImxpZ2h0XCIpLGF0dHJpYnV0ZTokPVwiZGF0YS10aGVtZVwiLHZhbHVlOmYsY2hpbGRyZW46dyxub25jZTpUfSk9Pntjb25zdFtFLGtdPXIoKCk9PlMoZCx5KSksW0MsTF09cigoKT0+UyhkKSkseD1mP09iamVjdC52YWx1ZXMoZik6aCxJPW8oZT0+e2xldCB0PWU7aWYoIXQpcmV0dXJuO1wic3lzdGVtXCI9PT1lJiZsJiYodD1wKCkpO2NvbnN0IHI9Zj9mW3RdOnQsbz1uP2IoKTpudWxsLGE9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O2lmKFwiY2xhc3NcIj09PSQ/KGEuY2xhc3NMaXN0LnJlbW92ZSguLi54KSxyJiZhLmNsYXNzTGlzdC5hZGQocikpOnI/YS5zZXRBdHRyaWJ1dGUoJCxyKTphLnJlbW92ZUF0dHJpYnV0ZSgkKSxtKXtjb25zdCBlPWMuaW5jbHVkZXMoeSk/eTpudWxsLG49Yy5pbmNsdWRlcyh0KT90OmU7YS5zdHlsZS5jb2xvclNjaGVtZT1ufW51bGw9PW98fG8oKX0sW10pLE89byhlPT57ayhlKTt0cnl7bG9jYWxTdG9yYWdlLnNldEl0ZW0oZCxlKX1jYXRjaChlKXt9fSxbdF0pLE09byhlPT57Y29uc3Qgbj1wKGUpO0wobiksXCJzeXN0ZW1cIj09PUUmJmwmJiF0JiZJKFwic3lzdGVtXCIpfSxbRSx0XSk7YSgoKT0+e2NvbnN0IGU9d2luZG93Lm1hdGNoTWVkaWEoaSk7cmV0dXJuIGUuYWRkTGlzdGVuZXIoTSksTShlKSwoKT0+ZS5yZW1vdmVMaXN0ZW5lcihNKX0sW01dKSxhKCgpPT57Y29uc3QgZT1lPT57ZS5rZXk9PT1kJiZPKGUubmV3VmFsdWV8fHkpfTtyZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsZSksKCk9PndpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic3RvcmFnZVwiLGUpfSxbT10pLGEoKCk9PntJKG51bGwhPXQ/dDpFKX0sW3QsRV0pO2NvbnN0IEE9cygoKT0+KHt0aGVtZTpFLHNldFRoZW1lOk8sZm9yY2VkVGhlbWU6dCxyZXNvbHZlZFRoZW1lOlwic3lzdGVtXCI9PT1FP0M6RSx0aGVtZXM6bD9bLi4uaCxcInN5c3RlbVwiXTpoLHN5c3RlbVRoZW1lOmw/Qzp2b2lkIDB9KSxbRSxPLHQsQyxsLGhdKTsvKiNfX1BVUkVfXyovcmV0dXJuIGUuY3JlYXRlRWxlbWVudCh1LlByb3ZpZGVyLHt2YWx1ZTpBfSwvKiNfX1BVUkVfXyovZS5jcmVhdGVFbGVtZW50KGcse2ZvcmNlZFRoZW1lOnQsZGlzYWJsZVRyYW5zaXRpb25PbkNoYW5nZTpuLGVuYWJsZVN5c3RlbTpsLGVuYWJsZUNvbG9yU2NoZW1lOm0sc3RvcmFnZUtleTpkLHRoZW1lczpoLGRlZmF1bHRUaGVtZTp5LGF0dHJpYnV0ZTokLHZhbHVlOmYsY2hpbGRyZW46dyxhdHRyczp4LG5vbmNlOlR9KSx3KX0sZz0vKiNfX1BVUkVfXyovbCgoe2ZvcmNlZFRoZW1lOnQsc3RvcmFnZUtleTpuLGF0dHJpYnV0ZTpyLGVuYWJsZVN5c3RlbTpvLGVuYWJsZUNvbG9yU2NoZW1lOmEsZGVmYXVsdFRoZW1lOnMsdmFsdWU6bCxhdHRyczptLG5vbmNlOmR9KT0+e2NvbnN0IHU9XCJzeXN0ZW1cIj09PXMsaD1cImNsYXNzXCI9PT1yP2B2YXIgZD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYz1kLmNsYXNzTGlzdDtjLnJlbW92ZSgke20ubWFwKGU9PmAnJHtlfSdgKS5qb2luKFwiLFwiKX0pO2A6YHZhciBkPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxuPScke3J9JyxzPSdzZXRBdHRyaWJ1dGUnO2AseT1hP2MuaW5jbHVkZXMocykmJnM/YGlmKGU9PT0nbGlnaHQnfHxlPT09J2RhcmsnfHwhZSlkLnN0eWxlLmNvbG9yU2NoZW1lPWV8fCcke3N9J2A6XCJpZihlPT09J2xpZ2h0J3x8ZT09PSdkYXJrJylkLnN0eWxlLmNvbG9yU2NoZW1lPWVcIjpcIlwiLCQ9KGUsdD0hMSxuPSEwKT0+e2NvbnN0IG89bD9sW2VdOmUscz10P2UrXCJ8fCAnJ1wiOmAnJHtvfSdgO2xldCBtPVwiXCI7cmV0dXJuIGEmJm4mJiF0JiZjLmluY2x1ZGVzKGUpJiYobSs9YGQuc3R5bGUuY29sb3JTY2hlbWUgPSAnJHtlfSc7YCksXCJjbGFzc1wiPT09cj9tKz10fHxvP2BjLmFkZCgke3N9KWA6XCJudWxsXCI6byYmKG0rPWBkW3NdKG4sJHtzfSlgKSxtfSx2PXQ/YCFmdW5jdGlvbigpeyR7aH0keyQodCl9fSgpYDpvP2AhZnVuY3Rpb24oKXt0cnl7JHtofXZhciBlPWxvY2FsU3RvcmFnZS5nZXRJdGVtKCcke259Jyk7aWYoJ3N5c3RlbSc9PT1lfHwoIWUmJiR7dX0pKXt2YXIgdD0nJHtpfScsbT13aW5kb3cubWF0Y2hNZWRpYSh0KTtpZihtLm1lZGlhIT09dHx8bS5tYXRjaGVzKXskeyQoXCJkYXJrXCIpfX1lbHNleyR7JChcImxpZ2h0XCIpfX19ZWxzZSBpZihlKXske2w/YHZhciB4PSR7SlNPTi5zdHJpbmdpZnkobCl9O2A6XCJcIn0keyQobD9cInhbZV1cIjpcImVcIiwhMCl9fSR7dT9cIlwiOlwiZWxzZXtcIiskKHMsITEsITEpK1wifVwifSR7eX19Y2F0Y2goZSl7fX0oKWA6YCFmdW5jdGlvbigpe3RyeXske2h9dmFyIGU9bG9jYWxTdG9yYWdlLmdldEl0ZW0oJyR7bn0nKTtpZihlKXske2w/YHZhciB4PSR7SlNPTi5zdHJpbmdpZnkobCl9O2A6XCJcIn0keyQobD9cInhbZV1cIjpcImVcIiwhMCl9fWVsc2V7JHskKHMsITEsITEpfTt9JHt5fX1jYXRjaCh0KXt9fSgpO2A7LyojX19QVVJFX18qL3JldHVybiBlLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIix7bm9uY2U6ZCxkYW5nZXJvdXNseVNldElubmVySFRNTDp7X19odG1sOnZ9fSl9LCgpPT4hMCksUz0oZSx0KT0+e2lmKGQpcmV0dXJuO2xldCBuO3RyeXtuPWxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpfHx2b2lkIDB9Y2F0Y2goZSl7fXJldHVybiBufHx0fSxiPSgpPT57Y29uc3QgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7cmV0dXJuIGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCIqey13ZWJraXQtdHJhbnNpdGlvbjpub25lIWltcG9ydGFudDstbW96LXRyYW5zaXRpb246bm9uZSFpbXBvcnRhbnQ7LW8tdHJhbnNpdGlvbjpub25lIWltcG9ydGFudDstbXMtdHJhbnNpdGlvbjpub25lIWltcG9ydGFudDt0cmFuc2l0aW9uOm5vbmUhaW1wb3J0YW50fVwiKSksZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChlKSwoKT0+e3dpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmJvZHkpLHNldFRpbWVvdXQoKCk9Pntkb2N1bWVudC5oZWFkLnJlbW92ZUNoaWxkKGUpfSwxKX19LHA9ZT0+KGV8fChlPXdpbmRvdy5tYXRjaE1lZGlhKGkpKSxlLm1hdGNoZXM/XCJkYXJrXCI6XCJsaWdodFwiKTtleHBvcnR7JCBhcyBUaGVtZVByb3ZpZGVyLHkgYXMgdXNlVGhlbWV9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/next-themes/dist/index.module.js\n"));

/***/ }),

/***/ "../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css":
/*!******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css ***!
  \******************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Roboto+Mono:wght@400;700&display=swap');\\n\\n:root {\\n\\t--font-body: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',\\n\\t\\tRoboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\\n\\t\\t'Segoe UI Symbol', 'Noto Color Emoji';\\n\\t--font-heading: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',\\n\\t\\tRoboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\\n\\t\\t'Segoe UI Symbol', 'Noto Color Emoji';\\n\\t--font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono', 'Roboto Mono',\\n\\t\\t'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro', 'Fira Mono', 'Droid Sans Mono',\\n\\t\\t'Courier New', monospace;\\n\\n\\t--color-tint-1: rgba(144, 144, 144, 0.08);\\n\\t--color-tint-2: rgba(144, 144, 144, 0.15);\\n\\t--color-tint-3: rgba(144, 144, 144, 0.3);\\n\\t--color-tint-4: rgba(144, 144, 144, 0.5);\\n\\t--color-tint-5: rgb(144, 144, 144);\\n\\t--color-tint-6: rgb(81, 81, 81);\\n\\n\\t/* Light theme */\\n\\t--color-text: #2d2d2d;\\n\\t--color-background: #ffffff;\\n\\t--color-accent: #2f80ed;\\n\\n\\t--shadow-small: 0px 0px 16px -2px rgba(0, 0, 0, 0.12), 0px 0px 4px 0px rgba(0, 0, 0, 0.12);\\n\\t--shadow-big: 0px 0px 16px -2px rgba(0, 0, 0, 0.24), 0px 0px 4px 0px rgba(0, 0, 0, 0.24);\\n\\n\\t/* Code colors */\\n\\t--hl: #4e484e;\\n\\t--hl-1: rgb(54, 59, 69);\\n\\t--hl-2: rgb(144, 81, 188);\\n\\t--hl-3: rgb(178, 66, 69);\\n\\t--hl-4: rgb(69, 141, 155);\\n\\t--hl-5: rgb(100, 144, 65);\\n\\t--hl-6: rgb(179, 108, 50);\\n\\t--hl-7: rgb(73, 131, 216);\\n\\t--hl-8: rgb(180, 133, 64);\\n}\\n\\n[data-theme='dark'] {\\n\\t/* Dark theme */\\n\\t--color-text: #fff;\\n\\t--color-background: #1d1d1d;\\n\\t--color-accent: #f3c14b;\\n\\n\\t--color-tint-6: rgb(186, 186, 186);\\n\\n\\t--shadow-small: 0px 0px 16px -2px rgba(0, 0, 0, 0.52), 0px 0px 4px 0px rgba(0, 0, 0, 0.62);\\n\\t--shadow-big: 0px 0px 16px -2px rgba(0, 0, 0, 0.54), 0px 0px 4px 0px rgba(0, 0, 0, 0.54);\\n\\n\\t/* Code colors */\\n\\t--hl: #c8c5f1;\\n\\t--hl-1: #5c6370;\\n\\t--hl-2: #c678dd;\\n\\t--hl-3: #e06c75;\\n\\t--hl-4: #56b6c2;\\n\\t--hl-5: #98c379;\\n\\t--hl-6: #d19a66;\\n\\t--hl-7: #61aeee;\\n\\t--hl-8: #e6c07b;\\n}\\n\\n/* @media (prefers-color-scheme: dark) {\\n\\t:root {\\n\\t\\t--color-text: #ffffff;\\n\\t\\t--color-background: #1d1d1d;\\n\\t}\\n} */\\n\\n/* @media (prefers-color-scheme: dark) {\\n\\thtml {\\n\\t\\tcolor-scheme: dark;\\n\\t}\\n} */\\n\\n* {\\n\\tbox-sizing: border-box;\\n\\tpadding: 0;\\n\\tmargin: 0;\\n}\\n\\nhtml {\\n\\tbackground-color: var(--color-background);\\n}\\n\\nbody {\\n\\tfont-family: var(--font-body);\\n\\tfont-size: 16px;\\n\\tline-height: 1.5;\\n\\tfont-weight: 400;\\n\\tcolor: var(--color-text);\\n\\tbackground-color: var(--color-background);\\n\\ttransition: background-color 0.2s ease-in-out;\\n}\\n\\n.layout {\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 212px 1fr;\\n\\tgrid-template-rows: 1fr;\\n\\twidth: 100%;\\n\\tmax-width: 984px;\\n\\tgrid-column-gap: 28px;\\n\\tcolumn-gap: 28px;\\n\\tgrid-row-gap: 0px;\\n\\trow-gap: 0px;\\n\\tmargin: 0px auto;\\n}\\n\\n.icon-button {\\n\\tdisplay: block;\\n\\tposition: relative;\\n\\theight: 40px;\\n\\twidth: 40px;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\tbackground: none;\\n\\tborder: none;\\n\\t--bg: transparent;\\n\\tcolor: var(--color-text);\\n\\tcursor: pointer;\\n}\\n\\n.icon-button::after {\\n\\tposition: absolute;\\n\\tdisplay: block;\\n\\tcontent: '';\\n\\tinset: 4px;\\n\\tbackground-color: var(--bg);\\n\\tborder-radius: 4px;\\n\\ttransition: background-color 0.1s ease-in-out;\\n\\ttransition-delay: 0s;\\n}\\n\\n@media (hover: hover) {\\n\\t.icon-button:hover {\\n\\t\\t--bg: var(--color-tint-1);\\n\\t\\tcolor: var(--color-accent);\\n\\t\\ttransition: background-color 0.2s ease-in-out;\\n\\t\\ttransition-delay: 0.1s;\\n\\t}\\n}\\n\\n.icon {\\n\\tflex-shrink: 0;\\n\\twidth: 16px;\\n\\theight: 16px;\\n\\tbackground-color: currentColor;\\n}\\n\\n.lockup {\\n\\tposition: relative;\\n\\twidth: calc(71px * 4);\\n\\theight: calc(18px * 4);\\n\\tbackground: currentColor;\\n\\tmargin-bottom: 40px;\\n}\\n\\n@media (max-width: 600px) {\\n\\t.lockup {\\n\\t\\twidth: calc(71px * 3);\\n\\t\\theight: calc(18px * 3);\\n\\t}\\n\\n\\t.lockup + h2 {\\n\\t\\tfont-size: 18px;\\n\\t}\\n}\\n\\n.article {\\n\\tpadding: 56px 16px 120px 16px;\\n\\tfont-weight: 400;\\n\\tmax-width: 100%;\\n\\toverflow-x: hidden;\\n\\toverflow-y: visible;\\n}\\n\\n.article__details {\\n\\tdisplay: flex;\\n\\talign-items: flex-start;\\n\\tjustify-content: space-between;\\n\\tmargin: 40px 0px;\\n\\tgap: 16px;\\n\\tmax-width: 100%;\\n\\toverflow: hidden;\\n}\\n\\n.article__details__edit {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tgap: 5px;\\n\\tfont-size: 14px;\\n\\tflex-shrink: 0;\\n}\\n\\n.article__details__timestamp {\\n\\tfont-size: 14px;\\n\\tcolor: var(--color-tint-5);\\n\\ttext-align: right;\\n}\\n\\n/* Prev / Next Links */\\n\\n.article__links {\\n\\twidth: 100%;\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 1fr 1fr;\\n\\talign-items: flex-start;\\n\\tjustify-content: space-between;\\n\\tmax-width: 100%;\\n}\\n\\n.article__links .icon {\\n\\tdisplay: inline-block;\\n}\\n\\n.article__links__link {\\n\\tdisplay: block;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tgap: 8px;\\n\\tborder: 1px solid var(--color-accent);\\n\\tpadding: 10px 16px;\\n\\tborder-radius: 4px;\\n\\twhite-space: nowrap;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n}\\n\\n.article__links__prev {\\n\\tgrid-column: 1;\\n\\tjustify-self: flex-start;\\n}\\n\\n.article__links__next {\\n\\tgrid-column: 2;\\n\\tjustify-self: flex-end;\\n}\\n\\n/* Common Styles */\\n\\n.article > * {\\n\\tcontent-visibility: auto;\\n}\\n\\n.article > h2,\\n.article > h3,\\n.article > h4,\\n.article > h5,\\n.article > h6 {\\n\\tline-height: 1.2;\\n}\\n\\n.article > h2 > a,\\n.article > h3 > a,\\n.article > h4 > a,\\n.article > h5 > a,\\n.article > h6 > a {\\n\\tcolor: var(--color-text);\\n}\\n\\n.article h1 {\\n\\tfont-size: 2.5em;\\n\\tmargin-bottom: 32px;\\n\\tline-height: 1.15;\\n\\tword-break: break-all;\\n}\\n\\n.article h2 {\\n\\tmargin: 48px 0px 40px 0px;\\n\\tfont-size: 1.8em;\\n\\t/* margin: 24px 0px 40px 0px; */\\n}\\n\\n.article h5 {\\n\\ttext-transform: uppercase;\\n\\tcolor: var(--color-tint-5);\\n\\tletter-spacing: 0.1em;\\n\\tfont-size: 12px;\\n\\tfont-weight: 400;\\n}\\n\\n.article details {\\n\\tmargin: 32px 0px;\\n}\\n\\n.article details > summary {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tlist-style: none;\\n}\\n\\n.article details > summary::before {\\n\\tfont-size: 10px;\\n\\tcontent: '▶';\\n\\tmargin-right: 8px;\\n}\\n\\n.article details[open] > summary::before {\\n\\tcontent: '▼';\\n}\\n\\n.article p.article__small {\\n\\tmargin: 8px 0px 32px 0px;\\n}\\n\\n.article p.article__small small {\\n\\tfont-size: 14px;\\n\\tcolor: var(--color-tint-6);\\n}\\n\\n.article a {\\n\\tcolor: var(--color-accent);\\n\\ttext-decoration: none;\\n\\tcursor: pointer;\\n}\\n\\n@media (hover: hover) {\\n\\t.article a:hover {\\n\\t\\ttext-decoration: underline;\\n\\t}\\n}\\n\\n.article > p {\\n\\tmargin: 32px 0px;\\n}\\n\\n.article > blockquote {\\n\\tmax-width: 100%;\\n\\tmargin: 32px 0px;\\n\\tpadding-left: 16px;\\n\\tborder-left: 2px solid var(--color-tint-2);\\n}\\n\\n.article pre {\\n\\tmax-width: 100%;\\n\\tmargin: 32px 0px;\\n\\tpadding: 16px;\\n\\tbackground-color: var(--color-tint-1);\\n\\tborder-radius: 8px;\\n\\tfont-size: 13px;\\n\\toverflow-x: auto;\\n}\\n\\n.article code {\\n\\tfont-family: var(--font-mono);\\n}\\n\\n.article p > code,\\n.article td > code {\\n\\tbackground-color: var(--color-tint-1);\\n\\tfont-size: 15px;\\n\\tpadding: 2px 4px;\\n\\tmargin: 0px -2px;\\n\\tborder-radius: 4px;\\n}\\n\\n.article pre > code {\\n\\tfont-size: 14px;\\n\\twidth: 100%;\\n\\t-moz-tab-size: 16px;\\n\\t     tab-size: 16px;\\n}\\n\\n.article ol {\\n\\tmargin: 24px 0px;\\n\\tpadding-left: 16px;\\n}\\n\\n.article ul {\\n\\tmargin: 24px 0px;\\n\\tpadding-left: 16px;\\n}\\n\\n.article li {\\n\\tmargin: 8px 0px;\\n}\\n\\n.article hr {\\n\\tmargin: 52px 0px;\\n\\tpadding: 0px 4px;\\n\\theight: 1px;\\n\\twidth: calc(100% - 8px);\\n\\tbackground-color: var(--color-tint-2);\\n\\tborder: none;\\n}\\n\\n.article table {\\n\\tmargin: 32px 0px;\\n\\tborder-radius: 4px;\\n\\toverflow: hidden;\\n\\twidth: 100%;\\n\\ttext-align: left;\\n\\tborder: 1px solid var(--color-tint-2);\\n}\\n\\n.article table th {\\n\\tpadding: 8px 16px;\\n\\tfont-weight: 400;\\n\\tfont-size: 12px;\\n\\ttext-transform: uppercase;\\n\\tcolor: var(--color-tint-5);\\n\\tletter-spacing: 0.1em;\\n\\tborder-bottom: 1px solid var(--color-tint-2);\\n}\\n\\n.article td:nth-of-type(1) {\\n\\twidth: 25%;\\n\\tmax-width: 50%;\\n}\\n\\n.article table td {\\n\\tpadding: 8px 16px;\\n}\\n\\n.article table td:nth-of-type(1) {\\n\\tfont-family: var(--font-mono);\\n}\\n\\n.artcle__image {\\n\\tdisplay: block;\\n\\tmax-width: 100%;\\n\\tmargin: 24px 0px;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tgap: 12px;\\n}\\n\\n.artcle__image > img {\\n\\twidth: 100%;\\n\\tmax-width: 100%;\\n\\theight: auto;\\n\\tborder-radius: 4px;\\n}\\n\\n.article__caption {\\n\\tdisplay: block;\\n\\ttext-align: center;\\n\\tfont-size: 14px;\\n\\twidth: 100%;\\n}\\n\\n.breadcrumb {\\n\\tfont-size: 12px;\\n\\ttext-transform: uppercase;\\n\\tletter-spacing: 0.1em;\\n\\tcolor: var(--color-tint-6);\\n\\tmargin-bottom: 8px;\\n}\\n\\n.breadcrumb a {\\n\\tcolor: inherit;\\n}\\n\\n/* --------------------- Sidebar -------------------- */\\n\\n.sidebar {\\n\\tposition: relative;\\n\\tposition: -webkit-sticky;\\n\\tposition: sticky;\\n\\tpadding: 8px;\\n\\talign-self: start;\\n\\ttop: 0px;\\n\\tmax-height: calc(100vh);\\n\\tz-index: 1000;\\n\\toverflow-y: auto;\\n\\tpadding-top: 40px;\\n}\\n\\n.sidebar .sidebar__list h4 {\\n\\tpadding: 12px;\\n}\\n\\n.sidebar a {\\n\\tcolor: inherit;\\n\\ttext-decoration: none;\\n\\tcursor: pointer;\\n}\\n\\n.sidebar hr {\\n\\tmargin: 11px 4px;\\n\\tpadding: 0px 4px;\\n\\theight: 1px;\\n\\twidth: calc(100% - 8px);\\n\\tbackground-color: var(--color-tint-2);\\n\\tborder: none;\\n}\\n\\n.sidebar__list {\\n\\tpadding: 0px;\\n\\tmargin: 0px;\\n\\tlist-style-type: none;\\n}\\n\\n.sidebar__link {\\n\\tposition: relative;\\n\\theight: 40px;\\n\\tpadding: 0px 12px;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: flex-start;\\n\\tcolor: var(--color-text);\\n\\t--bg: transparent;\\n\\tmargin-top: -4px;\\n\\tmargin-bottom: -4px;\\n}\\n\\n.sidebar__link:nth-of-type(1) {\\n\\tmargin-top: 0px;\\n}\\n\\n.sidebar__link:nth-last-of-type(1) {\\n\\tmargin-bottom: 0px;\\n}\\n\\n.sidebar__link[data-active='true'] {\\n\\t--bg: var(--color-tint-2);\\n}\\n\\n.sidebar__link::after {\\n\\tposition: absolute;\\n\\tdisplay: block;\\n\\tcontent: '';\\n\\tinset: 4px;\\n\\tbackground-color: var(--bg);\\n\\tborder-radius: 4px;\\n\\ttransition: background-color 0.2s ease-in-out;\\n\\ttransition-delay: 0s;\\n}\\n\\n.sidebar__section__title {\\n\\tfont-size: 12px;\\n\\ttext-transform: uppercase;\\n\\tletter-spacing: 0.1em;\\n\\tcolor: var(--color-tint-5);\\n}\\n\\n.sidebar__sections__list > *:nth-of-type(1) {\\n\\tpadding-top: 12px;\\n}\\n\\n.sidebar__sections__list > *:nth-last-of-type(n + 2) .sidebar__list {\\n\\tpadding-bottom: 12px;\\n\\tmargin-bottom: 12px;\\n\\tborder-bottom: 1px solid var(--color-tint-2);\\n}\\n\\n@media (hover: hover) {\\n\\t.sidebar__link:hover {\\n\\t\\tcolor: var(--color-accent);\\n\\t\\ttransition: background-color 0.12s ease-in-out;\\n\\t\\ttransition-delay: 0.1s;\\n\\t}\\n\\n\\t.sidebar__link:not([data-active='true']):hover {\\n\\t\\t--bg: var(--color-tint-1);\\n\\t}\\n}\\n\\n.sidebar__footer {\\n\\tpadding: 12px;\\n\\tpadding-top: 44px;\\n\\tfont-size: 13px;\\n\\tcolor: var(--color-tint-3);\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\ttransition: color 0.2s ease-in-out;\\n\\ttransition-delay: 0s;\\n\\tgap: 8px;\\n}\\n\\n@media (hover: hover) {\\n\\t.sidebar__footer:hover {\\n\\t\\tcolor: var(--color-text);\\n\\t\\ttransition: color 0.3s ease-in-out;\\n\\t\\ttransition-delay: 0.2s;\\n\\t}\\n}\\n\\n.sidebar__lockup {\\n\\tposition: relative;\\n\\twidth: calc(71px * 1.3);\\n\\theight: calc(18px * 1.3);\\n\\tbackground: currentColor;\\n}\\n\\n.sidebar__buttons {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n}\\n\\n.sidebar__buttons__socials {\\n\\tdisplay: flex;\\n}\\n\\n.sidebar__close {\\n\\tdisplay: none;\\n\\twidth: 100%;\\n\\talign-items: center;\\n\\tjustify-content: flex-end;\\n\\tcolor: var(--color-text);\\n\\tposition: fixed;\\n\\tbottom: 0px;\\n\\tleft: 0px;\\n\\twidth: 100%;\\n\\tpadding: 8px;\\n\\tfont-size: 14px;\\n\\tgap: 2px;\\n}\\n\\n.menu__button {\\n\\tdisplay: none;\\n\\tposition: fixed;\\n\\tz-index: 500;\\n\\tbottom: 8px;\\n\\tright: 8px;\\n\\tbackground-color: var(--color-text);\\n\\tborder-radius: 6px;\\n\\tcolor: var(--color-background);\\n\\tbox-shadow: var(--shadow-small);\\n}\\n\\n/* --------------------- Search --------------------- */\\n\\n.search__wrapper {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n}\\n\\n.search {\\n\\tposition: relative;\\n\\tz-index: 200;\\n\\theight: 40px;\\n\\tpadding: 4px;\\n}\\n\\n.search__icon {\\n\\tposition: absolute;\\n\\ttop: 50%;\\n\\ttransform: translateY(-50%);\\n\\tleft: 12px;\\n\\tz-index: 2;\\n\\tpointer-events: none;\\n}\\n\\n.search__input {\\n\\tposition: relative;\\n\\tpadding-left: 28px;\\n\\theight: 100%;\\n\\twidth: 100%;\\n\\tborder-radius: 4px;\\n\\tborder: 1px solid var(--color-tint-3);\\n\\tbackground-color: var(--color-background);\\n\\tfont-family: var(--font-body);\\n\\tfont-size: 14px;\\n\\tbackground-color: none;\\n\\tbackground: none;\\n}\\n\\n.search__input:disabled {\\n\\tbackground-color: var(--color-tint-1);\\n\\tcolor: var(--color-tint-5);\\n}\\n\\n.search__input::placeholder {\\n\\tcolor: var(--color-tint-4);\\n}\\n\\n.search__input:focus {\\n\\toutline: none;\\n\\tborder-color: var(--color-text);\\n}\\n\\n.search__results__wrapper {\\n\\tposition: relative;\\n\\theight: 0px;\\n\\twidth: 100%;\\n\\tz-index: 100;\\n}\\n\\n.search__results {\\n\\tpadding: 0px;\\n\\tposition: absolute;\\n\\ttop: 0px;\\n\\tleft: 0px;\\n\\tbackground-color: var(--color-background);\\n\\twidth: 320px;\\n\\tborder-radius: 8px;\\n\\tbox-shadow: var(--shadow-big);\\n\\tmax-height: 80vh;\\n\\toverflow-y: auto;\\n}\\n\\n.search__results__list {\\n\\tlist-style-type: none;\\n\\tpadding: 4px;\\n\\tmargin: 0px;\\n}\\n\\n.search__results__article {\\n\\tflex-direction: column;\\n\\talign-items: flex-start;\\n\\tjustify-content: center;\\n\\tfont-size: 16px;\\n\\tpadding: 12px;\\n\\theight: -moz-fit-content;\\n\\theight: fit-content;\\n\\tborder-radius: 12px;\\n}\\n\\n.search__results__article h4 {\\n\\tfont-size: 11px;\\n\\ttext-transform: uppercase;\\n\\tletter-spacing: 1px;\\n\\tfont-weight: 500;\\n\\tcolor: var(--color-tint-5);\\n\\tmargin-bottom: 4px;\\n}\\n\\n.search__results__article h3 {\\n\\tfont-size: 16px;\\n\\tfont-weight: 500;\\n}\\n\\n@media (hover: hover) {\\n\\t.sidebar__article:hover {\\n\\t\\tcolor: var(--color-accent);\\n\\t\\ttransition: background-color 0.12s ease-in-out;\\n\\t\\ttransition-delay: 0.1s;\\n\\t}\\n\\n\\t.sidebar__article:not([data-active='true']):hover {\\n\\t\\t--bg: var(--color-tint-1);\\n\\t}\\n}\\n\\n/* --------------------- API docs --------------------- */\\n.parametersTable {\\n\\ttable-layout: fixed;\\n}\\n.parametersTable > thead th:nth-child(1) {\\n\\twidth: 25%;\\n}\\n.parametersTable > thead th:nth-child(2) {\\n\\twidth: 75%;\\n}\\n.parametersTable pre {\\n\\tmargin-top: 0;\\n\\tmargin-bottom: 16px;\\n}\\n.parametersTable-row > td {\\n\\tvertical-align: top;\\n}\\n.parametersTable-row:not(:last-child) > td {\\n\\tborder-bottom: 1px solid var(--color-tint-1);\\n}\\n\\n/* --------------------- Mobile --------------------- */\\n\\n@media (max-width: 760px) {\\n\\t.layout {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: 1fr;\\n\\t\\tgrid-template-rows: 1fr;\\n\\t\\twidth: 100%;\\n\\t\\tmax-width: 984px;\\n\\t\\tgrid-column-gap: 28px;\\n\\t\\tcolumn-gap: 28px;\\n\\t\\tgrid-row-gap: 0px;\\n\\t\\trow-gap: 0px;\\n\\t\\tmargin: 0px auto;\\n\\t\\tpadding-top: 16px;\\n\\t}\\n\\n\\t.menu__button {\\n\\t\\tdisplay: flex;\\n\\t\\tpointer-events: all;\\n\\t}\\n\\n\\t.sidebar {\\n\\t\\tdisplay: none;\\n\\t\\tbackground-color: var(--color-background);\\n\\t}\\n\\n\\t.sidebar[data-open='true'] {\\n\\t\\tdisplay: initial;\\n\\t\\tposition: fixed;\\n\\t\\tinset: 0px;\\n\\t\\tz-index: 10000;\\n\\t}\\n\\n\\t.sidebar[data-open='true'] > .sidebar__close {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\n\\t.sidebar__article {\\n\\t\\theight: 44px;\\n\\t\\tfont-size: 16px;\\n\\t}\\n\\n\\t.icon-button {\\n\\t\\theight: 44px;\\n\\t\\twidth: 44px;\\n\\t}\\n\\n\\t.search {\\n\\t\\theight: 44px;\\n\\t}\\n\\n\\t.search__input {\\n\\t\\tfont-size: 16px;\\n\\t}\\n\\n\\t.search__results__article {\\n\\t\\theight: auto;\\n\\t}\\n\\n\\t.search__results {\\n\\t\\tposition: static;\\n\\t\\tbox-shadow: none;\\n\\t\\tpadding: 0px;\\n\\t\\tpadding-top: 8px;\\n\\t\\twidth: 100%;\\n\\t}\\n\\n\\t.search__results__list {\\n\\t\\tpadding: 0px;\\n\\t\\tlist-style-type: none;\\n\\t}\\n\\n\\t.search__results__wrapper {\\n\\t\\theight: auto;\\n\\t}\\n\\n\\t.article {\\n\\t\\tpadding-top: 32px;\\n\\t}\\n\\n\\t.article h1 {\\n\\t\\tfont-size: 36px;\\n\\t}\\n\\n\\t.article__links {\\n\\t\\tgrid-template-columns: 1fr;\\n\\t\\tgrid-auto-rows: 44px;\\n\\t\\tgap: 24px;\\n\\t}\\n\\n\\t.article__links__prev {\\n\\t\\tborder: none;\\n\\t\\tgrid-row: 2;\\n\\t\\tgrid-column: 2;\\n\\t\\tjustify-self: flex-end;\\n\\t}\\n\\n\\t.article__links__next {\\n\\t\\tgrid-row: 1;\\n\\t\\tgrid-column: 2;\\n\\t\\tjustify-self: flex-end;\\n\\t}\\n}\\n\\n/* ------------------- Code Themes ------------------ */\\n\\n.hljs {\\n\\tcolor: var(--hl);\\n}\\n\\n.hljs-comment,\\n.hljs-quote {\\n\\tcolor: var(--hl-1);\\n\\tfont-style: italic;\\n}\\n\\n.hljs-doctag,\\n.hljs-keyword,\\n.hljs-formula {\\n\\tcolor: var(--hl-2);\\n}\\n\\n.hljs-section,\\n.hljs-name,\\n.hljs-selector-tag,\\n.hljs-deletion,\\n.hljs-subst {\\n\\tcolor: var(--hl-3);\\n}\\n\\n.hljs-literal {\\n\\tcolor: var(--hl-4);\\n}\\n\\n.hljs-string,\\n.hljs-regexp,\\n.hljs-addition,\\n.hljs-attribute,\\n.hljs-meta .hljs-string {\\n\\tcolor: var(--hl-5);\\n}\\n\\n.hljs-attr,\\n.hljs-variable,\\n.hljs-template-variable,\\n.hljs-type,\\n.hljs-selector-class,\\n.hljs-selector-attr,\\n.hljs-selector-pseudo,\\n.hljs-number {\\n\\tcolor: var(--hl-6);\\n}\\n\\n.hljs-symbol,\\n.hljs-bullet,\\n.hljs-link,\\n.hljs-meta,\\n.hljs-selector-id,\\n.hljs-title {\\n\\tcolor: var(--hl-7);\\n}\\n\\n.hljs-built_in,\\n.hljs-title.class_,\\n.hljs-class .hljs-title {\\n\\tcolor: var(--hl-8);\\n}\\n\\n.hljs-emphasis {\\n\\tfont-style: italic;\\n}\\n\\n.hljs-strong {\\n\\tfont-weight: bold;\\n}\\n\\n.hljs-link {\\n\\ttext-decoration: underline;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/globals.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Roboto+Mono:wght@400;700&display=swap');\\n\\n:root {\\n\\t--font-body: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',\\n\\t\\tRoboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\\n\\t\\t'Segoe UI Symbol', 'Noto Color Emoji';\\n\\t--font-heading: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',\\n\\t\\tRoboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\\n\\t\\t'Segoe UI Symbol', 'Noto Color Emoji';\\n\\t--font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono', 'Roboto Mono',\\n\\t\\t'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro', 'Fira Mono', 'Droid Sans Mono',\\n\\t\\t'Courier New', monospace;\\n\\n\\t--color-tint-1: rgba(144, 144, 144, 0.08);\\n\\t--color-tint-2: rgba(144, 144, 144, 0.15);\\n\\t--color-tint-3: rgba(144, 144, 144, 0.3);\\n\\t--color-tint-4: rgba(144, 144, 144, 0.5);\\n\\t--color-tint-5: rgb(144, 144, 144);\\n\\t--color-tint-6: rgb(81, 81, 81);\\n\\n\\t/* Light theme */\\n\\t--color-text: #2d2d2d;\\n\\t--color-background: #ffffff;\\n\\t--color-accent: #2f80ed;\\n\\n\\t--shadow-small: 0px 0px 16px -2px rgba(0, 0, 0, 0.12), 0px 0px 4px 0px rgba(0, 0, 0, 0.12);\\n\\t--shadow-big: 0px 0px 16px -2px rgba(0, 0, 0, 0.24), 0px 0px 4px 0px rgba(0, 0, 0, 0.24);\\n\\n\\t/* Code colors */\\n\\t--hl: #4e484e;\\n\\t--hl-1: rgb(54, 59, 69);\\n\\t--hl-2: rgb(144, 81, 188);\\n\\t--hl-3: rgb(178, 66, 69);\\n\\t--hl-4: rgb(69, 141, 155);\\n\\t--hl-5: rgb(100, 144, 65);\\n\\t--hl-6: rgb(179, 108, 50);\\n\\t--hl-7: rgb(73, 131, 216);\\n\\t--hl-8: rgb(180, 133, 64);\\n}\\n\\n[data-theme='dark'] {\\n\\t/* Dark theme */\\n\\t--color-text: #fff;\\n\\t--color-background: #1d1d1d;\\n\\t--color-accent: #f3c14b;\\n\\n\\t--color-tint-6: rgb(186, 186, 186);\\n\\n\\t--shadow-small: 0px 0px 16px -2px rgba(0, 0, 0, 0.52), 0px 0px 4px 0px rgba(0, 0, 0, 0.62);\\n\\t--shadow-big: 0px 0px 16px -2px rgba(0, 0, 0, 0.54), 0px 0px 4px 0px rgba(0, 0, 0, 0.54);\\n\\n\\t/* Code colors */\\n\\t--hl: #c8c5f1;\\n\\t--hl-1: #5c6370;\\n\\t--hl-2: #c678dd;\\n\\t--hl-3: #e06c75;\\n\\t--hl-4: #56b6c2;\\n\\t--hl-5: #98c379;\\n\\t--hl-6: #d19a66;\\n\\t--hl-7: #61aeee;\\n\\t--hl-8: #e6c07b;\\n}\\n\\n/* @media (prefers-color-scheme: dark) {\\n\\t:root {\\n\\t\\t--color-text: #ffffff;\\n\\t\\t--color-background: #1d1d1d;\\n\\t}\\n} */\\n\\n/* @media (prefers-color-scheme: dark) {\\n\\thtml {\\n\\t\\tcolor-scheme: dark;\\n\\t}\\n} */\\n\\n* {\\n\\tbox-sizing: border-box;\\n\\tpadding: 0;\\n\\tmargin: 0;\\n}\\n\\nhtml {\\n\\tbackground-color: var(--color-background);\\n}\\n\\nbody {\\n\\tfont-family: var(--font-body);\\n\\tfont-size: 16px;\\n\\tline-height: 1.5;\\n\\tfont-weight: 400;\\n\\tcolor: var(--color-text);\\n\\tbackground-color: var(--color-background);\\n\\ttransition: background-color 0.2s ease-in-out;\\n}\\n\\n.layout {\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 212px 1fr;\\n\\tgrid-template-rows: 1fr;\\n\\twidth: 100%;\\n\\tmax-width: 984px;\\n\\tcolumn-gap: 28px;\\n\\trow-gap: 0px;\\n\\tmargin: 0px auto;\\n}\\n\\n.icon-button {\\n\\tdisplay: block;\\n\\tposition: relative;\\n\\theight: 40px;\\n\\twidth: 40px;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\tbackground: none;\\n\\tborder: none;\\n\\t--bg: transparent;\\n\\tcolor: var(--color-text);\\n\\tcursor: pointer;\\n}\\n\\n.icon-button::after {\\n\\tposition: absolute;\\n\\tdisplay: block;\\n\\tcontent: '';\\n\\tinset: 4px;\\n\\tbackground-color: var(--bg);\\n\\tborder-radius: 4px;\\n\\ttransition: background-color 0.1s ease-in-out;\\n\\ttransition-delay: 0s;\\n}\\n\\n@media (hover: hover) {\\n\\t.icon-button:hover {\\n\\t\\t--bg: var(--color-tint-1);\\n\\t\\tcolor: var(--color-accent);\\n\\t\\ttransition: background-color 0.2s ease-in-out;\\n\\t\\ttransition-delay: 0.1s;\\n\\t}\\n}\\n\\n.icon {\\n\\tflex-shrink: 0;\\n\\twidth: 16px;\\n\\theight: 16px;\\n\\tbackground-color: currentColor;\\n}\\n\\n.lockup {\\n\\tposition: relative;\\n\\twidth: calc(71px * 4);\\n\\theight: calc(18px * 4);\\n\\tbackground: currentColor;\\n\\tmargin-bottom: 40px;\\n}\\n\\n@media (max-width: 600px) {\\n\\t.lockup {\\n\\t\\twidth: calc(71px * 3);\\n\\t\\theight: calc(18px * 3);\\n\\t}\\n\\n\\t.lockup + h2 {\\n\\t\\tfont-size: 18px;\\n\\t}\\n}\\n\\n.article {\\n\\tpadding: 56px 16px 120px 16px;\\n\\tfont-weight: 400;\\n\\tmax-width: 100%;\\n\\toverflow-x: hidden;\\n\\toverflow-y: visible;\\n}\\n\\n.article__details {\\n\\tdisplay: flex;\\n\\talign-items: flex-start;\\n\\tjustify-content: space-between;\\n\\tmargin: 40px 0px;\\n\\tgap: 16px;\\n\\tmax-width: 100%;\\n\\toverflow: hidden;\\n}\\n\\n.article__details__edit {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tgap: 5px;\\n\\tfont-size: 14px;\\n\\tflex-shrink: 0;\\n}\\n\\n.article__details__timestamp {\\n\\tfont-size: 14px;\\n\\tcolor: var(--color-tint-5);\\n\\ttext-align: right;\\n}\\n\\n/* Prev / Next Links */\\n\\n.article__links {\\n\\twidth: 100%;\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 1fr 1fr;\\n\\talign-items: flex-start;\\n\\tjustify-content: space-between;\\n\\tmax-width: 100%;\\n}\\n\\n.article__links .icon {\\n\\tdisplay: inline-block;\\n}\\n\\n.article__links__link {\\n\\tdisplay: block;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tgap: 8px;\\n\\tborder: 1px solid var(--color-accent);\\n\\tpadding: 10px 16px;\\n\\tborder-radius: 4px;\\n\\twhite-space: nowrap;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n}\\n\\n.article__links__prev {\\n\\tgrid-column: 1;\\n\\tjustify-self: flex-start;\\n}\\n\\n.article__links__next {\\n\\tgrid-column: 2;\\n\\tjustify-self: flex-end;\\n}\\n\\n/* Common Styles */\\n\\n.article > * {\\n\\tcontent-visibility: auto;\\n}\\n\\n.article > h2,\\n.article > h3,\\n.article > h4,\\n.article > h5,\\n.article > h6 {\\n\\tline-height: 1.2;\\n}\\n\\n.article > h2 > a,\\n.article > h3 > a,\\n.article > h4 > a,\\n.article > h5 > a,\\n.article > h6 > a {\\n\\tcolor: var(--color-text);\\n}\\n\\n.article h1 {\\n\\tfont-size: 2.5em;\\n\\tmargin-bottom: 32px;\\n\\tline-height: 1.15;\\n\\tword-break: break-all;\\n}\\n\\n.article h2 {\\n\\tmargin: 48px 0px 40px 0px;\\n\\tfont-size: 1.8em;\\n\\t/* margin: 24px 0px 40px 0px; */\\n}\\n\\n.article h5 {\\n\\ttext-transform: uppercase;\\n\\tcolor: var(--color-tint-5);\\n\\tletter-spacing: 0.1em;\\n\\tfont-size: 12px;\\n\\tfont-weight: 400;\\n}\\n\\n.article details {\\n\\tmargin: 32px 0px;\\n}\\n\\n.article details > summary {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tlist-style: none;\\n}\\n\\n.article details > summary::before {\\n\\tfont-size: 10px;\\n\\tcontent: '▶';\\n\\tmargin-right: 8px;\\n}\\n\\n.article details[open] > summary::before {\\n\\tcontent: '▼';\\n}\\n\\n.article p.article__small {\\n\\tmargin: 8px 0px 32px 0px;\\n}\\n\\n.article p.article__small small {\\n\\tfont-size: 14px;\\n\\tcolor: var(--color-tint-6);\\n}\\n\\n.article a {\\n\\tcolor: var(--color-accent);\\n\\ttext-decoration: none;\\n\\tcursor: pointer;\\n}\\n\\n@media (hover: hover) {\\n\\t.article a:hover {\\n\\t\\ttext-decoration: underline;\\n\\t}\\n}\\n\\n.article > p {\\n\\tmargin: 32px 0px;\\n}\\n\\n.article > blockquote {\\n\\tmax-width: 100%;\\n\\tmargin: 32px 0px;\\n\\tpadding-left: 16px;\\n\\tborder-left: 2px solid var(--color-tint-2);\\n}\\n\\n.article pre {\\n\\tmax-width: 100%;\\n\\tmargin: 32px 0px;\\n\\tpadding: 16px;\\n\\tbackground-color: var(--color-tint-1);\\n\\tborder-radius: 8px;\\n\\tfont-size: 13px;\\n\\toverflow-x: auto;\\n}\\n\\n.article code {\\n\\tfont-family: var(--font-mono);\\n}\\n\\n.article p > code,\\n.article td > code {\\n\\tbackground-color: var(--color-tint-1);\\n\\tfont-size: 15px;\\n\\tpadding: 2px 4px;\\n\\tmargin: 0px -2px;\\n\\tborder-radius: 4px;\\n}\\n\\n.article pre > code {\\n\\tfont-size: 14px;\\n\\twidth: 100%;\\n\\ttab-size: 16px;\\n}\\n\\n.article ol {\\n\\tmargin: 24px 0px;\\n\\tpadding-left: 16px;\\n}\\n\\n.article ul {\\n\\tmargin: 24px 0px;\\n\\tpadding-left: 16px;\\n}\\n\\n.article li {\\n\\tmargin: 8px 0px;\\n}\\n\\n.article hr {\\n\\tmargin: 52px 0px;\\n\\tpadding: 0px 4px;\\n\\theight: 1px;\\n\\twidth: calc(100% - 8px);\\n\\tbackground-color: var(--color-tint-2);\\n\\tborder: none;\\n}\\n\\n.article table {\\n\\tmargin: 32px 0px;\\n\\tborder-radius: 4px;\\n\\toverflow: hidden;\\n\\twidth: 100%;\\n\\ttext-align: left;\\n\\tborder: 1px solid var(--color-tint-2);\\n}\\n\\n.article table th {\\n\\tpadding: 8px 16px;\\n\\tfont-weight: 400;\\n\\tfont-size: 12px;\\n\\ttext-transform: uppercase;\\n\\tcolor: var(--color-tint-5);\\n\\tletter-spacing: 0.1em;\\n\\tborder-bottom: 1px solid var(--color-tint-2);\\n}\\n\\n.article td:nth-of-type(1) {\\n\\twidth: 25%;\\n\\tmax-width: 50%;\\n}\\n\\n.article table td {\\n\\tpadding: 8px 16px;\\n}\\n\\n.article table td:nth-of-type(1) {\\n\\tfont-family: var(--font-mono);\\n}\\n\\n.artcle__image {\\n\\tdisplay: block;\\n\\tmax-width: 100%;\\n\\tmargin: 24px 0px;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tgap: 12px;\\n}\\n\\n.artcle__image > img {\\n\\twidth: 100%;\\n\\tmax-width: 100%;\\n\\theight: auto;\\n\\tborder-radius: 4px;\\n}\\n\\n.article__caption {\\n\\tdisplay: block;\\n\\ttext-align: center;\\n\\tfont-size: 14px;\\n\\twidth: 100%;\\n}\\n\\n.breadcrumb {\\n\\tfont-size: 12px;\\n\\ttext-transform: uppercase;\\n\\tletter-spacing: 0.1em;\\n\\tcolor: var(--color-tint-6);\\n\\tmargin-bottom: 8px;\\n}\\n\\n.breadcrumb a {\\n\\tcolor: inherit;\\n}\\n\\n/* --------------------- Sidebar -------------------- */\\n\\n.sidebar {\\n\\tposition: relative;\\n\\tposition: sticky;\\n\\tpadding: 8px;\\n\\talign-self: start;\\n\\ttop: 0px;\\n\\tmax-height: calc(100vh);\\n\\tz-index: 1000;\\n\\toverflow-y: auto;\\n\\tpadding-top: 40px;\\n}\\n\\n.sidebar .sidebar__list h4 {\\n\\tpadding: 12px;\\n}\\n\\n.sidebar a {\\n\\tcolor: inherit;\\n\\ttext-decoration: none;\\n\\tcursor: pointer;\\n}\\n\\n.sidebar hr {\\n\\tmargin: 11px 4px;\\n\\tpadding: 0px 4px;\\n\\theight: 1px;\\n\\twidth: calc(100% - 8px);\\n\\tbackground-color: var(--color-tint-2);\\n\\tborder: none;\\n}\\n\\n.sidebar__list {\\n\\tpadding: 0px;\\n\\tmargin: 0px;\\n\\tlist-style-type: none;\\n}\\n\\n.sidebar__link {\\n\\tposition: relative;\\n\\theight: 40px;\\n\\tpadding: 0px 12px;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: flex-start;\\n\\tcolor: var(--color-text);\\n\\t--bg: transparent;\\n\\tmargin-top: -4px;\\n\\tmargin-bottom: -4px;\\n}\\n\\n.sidebar__link:nth-of-type(1) {\\n\\tmargin-top: 0px;\\n}\\n\\n.sidebar__link:nth-last-of-type(1) {\\n\\tmargin-bottom: 0px;\\n}\\n\\n.sidebar__link[data-active='true'] {\\n\\t--bg: var(--color-tint-2);\\n}\\n\\n.sidebar__link::after {\\n\\tposition: absolute;\\n\\tdisplay: block;\\n\\tcontent: '';\\n\\tinset: 4px;\\n\\tbackground-color: var(--bg);\\n\\tborder-radius: 4px;\\n\\ttransition: background-color 0.2s ease-in-out;\\n\\ttransition-delay: 0s;\\n}\\n\\n.sidebar__section__title {\\n\\tfont-size: 12px;\\n\\ttext-transform: uppercase;\\n\\tletter-spacing: 0.1em;\\n\\tcolor: var(--color-tint-5);\\n}\\n\\n.sidebar__sections__list > *:nth-of-type(1) {\\n\\tpadding-top: 12px;\\n}\\n\\n.sidebar__sections__list > *:nth-last-of-type(n + 2) .sidebar__list {\\n\\tpadding-bottom: 12px;\\n\\tmargin-bottom: 12px;\\n\\tborder-bottom: 1px solid var(--color-tint-2);\\n}\\n\\n@media (hover: hover) {\\n\\t.sidebar__link:hover {\\n\\t\\tcolor: var(--color-accent);\\n\\t\\ttransition: background-color 0.12s ease-in-out;\\n\\t\\ttransition-delay: 0.1s;\\n\\t}\\n\\n\\t.sidebar__link:not([data-active='true']):hover {\\n\\t\\t--bg: var(--color-tint-1);\\n\\t}\\n}\\n\\n.sidebar__footer {\\n\\tpadding: 12px;\\n\\tpadding-top: 44px;\\n\\tfont-size: 13px;\\n\\tcolor: var(--color-tint-3);\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\ttransition: color 0.2s ease-in-out;\\n\\ttransition-delay: 0s;\\n\\tgap: 8px;\\n}\\n\\n@media (hover: hover) {\\n\\t.sidebar__footer:hover {\\n\\t\\tcolor: var(--color-text);\\n\\t\\ttransition: color 0.3s ease-in-out;\\n\\t\\ttransition-delay: 0.2s;\\n\\t}\\n}\\n\\n.sidebar__lockup {\\n\\tposition: relative;\\n\\twidth: calc(71px * 1.3);\\n\\theight: calc(18px * 1.3);\\n\\tbackground: currentColor;\\n}\\n\\n.sidebar__buttons {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n}\\n\\n.sidebar__buttons__socials {\\n\\tdisplay: flex;\\n}\\n\\n.sidebar__close {\\n\\tdisplay: none;\\n\\twidth: 100%;\\n\\talign-items: center;\\n\\tjustify-content: flex-end;\\n\\tcolor: var(--color-text);\\n\\tposition: fixed;\\n\\tbottom: 0px;\\n\\tleft: 0px;\\n\\twidth: 100%;\\n\\tpadding: 8px;\\n\\tfont-size: 14px;\\n\\tgap: 2px;\\n}\\n\\n.menu__button {\\n\\tdisplay: none;\\n\\tposition: fixed;\\n\\tz-index: 500;\\n\\tbottom: 8px;\\n\\tright: 8px;\\n\\tbackground-color: var(--color-text);\\n\\tborder-radius: 6px;\\n\\tcolor: var(--color-background);\\n\\tbox-shadow: var(--shadow-small);\\n}\\n\\n/* --------------------- Search --------------------- */\\n\\n.search__wrapper {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n}\\n\\n.search {\\n\\tposition: relative;\\n\\tz-index: 200;\\n\\theight: 40px;\\n\\tpadding: 4px;\\n}\\n\\n.search__icon {\\n\\tposition: absolute;\\n\\ttop: 50%;\\n\\ttransform: translateY(-50%);\\n\\tleft: 12px;\\n\\tz-index: 2;\\n\\tpointer-events: none;\\n}\\n\\n.search__input {\\n\\tposition: relative;\\n\\tpadding-left: 28px;\\n\\theight: 100%;\\n\\twidth: 100%;\\n\\tborder-radius: 4px;\\n\\tborder: 1px solid var(--color-tint-3);\\n\\tbackground-color: var(--color-background);\\n\\tfont-family: var(--font-body);\\n\\tfont-size: 14px;\\n\\tbackground-color: none;\\n\\tbackground: none;\\n}\\n\\n.search__input:disabled {\\n\\tbackground-color: var(--color-tint-1);\\n\\tcolor: var(--color-tint-5);\\n}\\n\\n.search__input::placeholder {\\n\\tcolor: var(--color-tint-4);\\n}\\n\\n.search__input:focus {\\n\\toutline: none;\\n\\tborder-color: var(--color-text);\\n}\\n\\n.search__results__wrapper {\\n\\tposition: relative;\\n\\theight: 0px;\\n\\twidth: 100%;\\n\\tz-index: 100;\\n}\\n\\n.search__results {\\n\\tpadding: 0px;\\n\\tposition: absolute;\\n\\ttop: 0px;\\n\\tleft: 0px;\\n\\tbackground-color: var(--color-background);\\n\\twidth: 320px;\\n\\tborder-radius: 8px;\\n\\tbox-shadow: var(--shadow-big);\\n\\tmax-height: 80vh;\\n\\toverflow-y: auto;\\n}\\n\\n.search__results__list {\\n\\tlist-style-type: none;\\n\\tpadding: 4px;\\n\\tmargin: 0px;\\n}\\n\\n.search__results__article {\\n\\tflex-direction: column;\\n\\talign-items: flex-start;\\n\\tjustify-content: center;\\n\\tfont-size: 16px;\\n\\tpadding: 12px;\\n\\theight: fit-content;\\n\\tborder-radius: 12px;\\n}\\n\\n.search__results__article h4 {\\n\\tfont-size: 11px;\\n\\ttext-transform: uppercase;\\n\\tletter-spacing: 1px;\\n\\tfont-weight: 500;\\n\\tcolor: var(--color-tint-5);\\n\\tmargin-bottom: 4px;\\n}\\n\\n.search__results__article h3 {\\n\\tfont-size: 16px;\\n\\tfont-weight: 500;\\n}\\n\\n@media (hover: hover) {\\n\\t.sidebar__article:hover {\\n\\t\\tcolor: var(--color-accent);\\n\\t\\ttransition: background-color 0.12s ease-in-out;\\n\\t\\ttransition-delay: 0.1s;\\n\\t}\\n\\n\\t.sidebar__article:not([data-active='true']):hover {\\n\\t\\t--bg: var(--color-tint-1);\\n\\t}\\n}\\n\\n/* --------------------- API docs --------------------- */\\n.parametersTable {\\n\\ttable-layout: fixed;\\n}\\n.parametersTable > thead th:nth-child(1) {\\n\\twidth: 25%;\\n}\\n.parametersTable > thead th:nth-child(2) {\\n\\twidth: 75%;\\n}\\n.parametersTable pre {\\n\\tmargin-top: 0;\\n\\tmargin-bottom: 16px;\\n}\\n.parametersTable-row > td {\\n\\tvertical-align: top;\\n}\\n.parametersTable-row:not(:last-child) > td {\\n\\tborder-bottom: 1px solid var(--color-tint-1);\\n}\\n\\n/* --------------------- Mobile --------------------- */\\n\\n@media (max-width: 760px) {\\n\\t.layout {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: 1fr;\\n\\t\\tgrid-template-rows: 1fr;\\n\\t\\twidth: 100%;\\n\\t\\tmax-width: 984px;\\n\\t\\tcolumn-gap: 28px;\\n\\t\\trow-gap: 0px;\\n\\t\\tmargin: 0px auto;\\n\\t\\tpadding-top: 16px;\\n\\t}\\n\\n\\t.menu__button {\\n\\t\\tdisplay: flex;\\n\\t\\tpointer-events: all;\\n\\t}\\n\\n\\t.sidebar {\\n\\t\\tdisplay: none;\\n\\t\\tbackground-color: var(--color-background);\\n\\t}\\n\\n\\t.sidebar[data-open='true'] {\\n\\t\\tdisplay: initial;\\n\\t\\tposition: fixed;\\n\\t\\tinset: 0px;\\n\\t\\tz-index: 10000;\\n\\t}\\n\\n\\t.sidebar[data-open='true'] > .sidebar__close {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\n\\t.sidebar__article {\\n\\t\\theight: 44px;\\n\\t\\tfont-size: 16px;\\n\\t}\\n\\n\\t.icon-button {\\n\\t\\theight: 44px;\\n\\t\\twidth: 44px;\\n\\t}\\n\\n\\t.search {\\n\\t\\theight: 44px;\\n\\t}\\n\\n\\t.search__input {\\n\\t\\tfont-size: 16px;\\n\\t}\\n\\n\\t.search__results__article {\\n\\t\\theight: auto;\\n\\t}\\n\\n\\t.search__results {\\n\\t\\tposition: static;\\n\\t\\tbox-shadow: none;\\n\\t\\tpadding: 0px;\\n\\t\\tpadding-top: 8px;\\n\\t\\twidth: 100%;\\n\\t}\\n\\n\\t.search__results__list {\\n\\t\\tpadding: 0px;\\n\\t\\tlist-style-type: none;\\n\\t}\\n\\n\\t.search__results__wrapper {\\n\\t\\theight: auto;\\n\\t}\\n\\n\\t.article {\\n\\t\\tpadding-top: 32px;\\n\\t}\\n\\n\\t.article h1 {\\n\\t\\tfont-size: 36px;\\n\\t}\\n\\n\\t.article__links {\\n\\t\\tgrid-template-columns: 1fr;\\n\\t\\tgrid-auto-rows: 44px;\\n\\t\\tgap: 24px;\\n\\t}\\n\\n\\t.article__links__prev {\\n\\t\\tborder: none;\\n\\t\\tgrid-row: 2;\\n\\t\\tgrid-column: 2;\\n\\t\\tjustify-self: flex-end;\\n\\t}\\n\\n\\t.article__links__next {\\n\\t\\tgrid-row: 1;\\n\\t\\tgrid-column: 2;\\n\\t\\tjustify-self: flex-end;\\n\\t}\\n}\\n\\n/* ------------------- Code Themes ------------------ */\\n\\n.hljs {\\n\\tcolor: var(--hl);\\n}\\n\\n.hljs-comment,\\n.hljs-quote {\\n\\tcolor: var(--hl-1);\\n\\tfont-style: italic;\\n}\\n\\n.hljs-doctag,\\n.hljs-keyword,\\n.hljs-formula {\\n\\tcolor: var(--hl-2);\\n}\\n\\n.hljs-section,\\n.hljs-name,\\n.hljs-selector-tag,\\n.hljs-deletion,\\n.hljs-subst {\\n\\tcolor: var(--hl-3);\\n}\\n\\n.hljs-literal {\\n\\tcolor: var(--hl-4);\\n}\\n\\n.hljs-string,\\n.hljs-regexp,\\n.hljs-addition,\\n.hljs-attribute,\\n.hljs-meta .hljs-string {\\n\\tcolor: var(--hl-5);\\n}\\n\\n.hljs-attr,\\n.hljs-variable,\\n.hljs-template-variable,\\n.hljs-type,\\n.hljs-selector-class,\\n.hljs-selector-attr,\\n.hljs-selector-pseudo,\\n.hljs-number {\\n\\tcolor: var(--hl-6);\\n}\\n\\n.hljs-symbol,\\n.hljs-bullet,\\n.hljs-link,\\n.hljs-meta,\\n.hljs-selector-id,\\n.hljs-title {\\n\\tcolor: var(--hl-7);\\n}\\n\\n.hljs-built_in,\\n.hljs-title.class_,\\n.hljs-class .hljs-title {\\n\\tcolor: var(--hl-8);\\n}\\n\\n.hljs-emphasis {\\n\\tfont-style: italic;\\n}\\n\\n.hljs-strong {\\n\\tfont-weight: bold;\\n}\\n\\n.hljs-link {\\n\\ttext-decoration: underline;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css\n"));

/***/ }),

/***/ "../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \****************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaUJBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFCQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcz84NzgyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi8gLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuICAgIHZhciBsaXN0ID0gW10gLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICAgIDtcbiAgICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgICAgICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcbiAgICAgICAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgICAgfSkuam9pbihcIlwiKTtcbiAgICB9IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gICAgO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBUT0RPOiBmaXggdHlwZVxuICAgIGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgICAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICAgICAgbW9kdWxlcyA9IFtcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZXMsXG4gICAgICAgICAgICAgICAgICAgIFwiXCJcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgICAgIGlmIChkZWR1cGUpIHtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuICAgICAgICAgICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspe1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gbGlzdDtcbn07XG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICAgIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCBcIlwiIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgIDtcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gICAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICAgICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uKHNvdXJjZSkge1xuICAgICAgICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIGNvbnRlbnRcbiAgICAgICAgXS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtcbiAgICAgICAgICAgIHNvdXJjZU1hcHBpbmdcbiAgICAgICAgXSkuam9pbihcIlxcblwiKTtcbiAgICB9XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY29udGVudFxuICAgIF0uam9pbihcIlxcblwiKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "../../node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!***********************************************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \***********************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzP2Fic29sdXRlUGFnZVBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2FwcCZwYWdlPSUyRl9hcHAhLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsaURBQXlCO0FBQ2hEO0FBQ0E7QUFDQSxPQUFPLElBQVU7QUFDakIsTUFBTSxVQUFVO0FBQ2hCO0FBQ0EsT0FBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz9mMDFlIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvX2FwcFwiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcInByaXZhdGUtbmV4dC1wYWdlcy9fYXBwXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9fYXBwXCJdKVxuICAgICAgfSk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvZ2xvYmFscy5jc3MuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDhOQUE4RztBQUNoSSwwQkFBMEIsbUJBQU8sQ0FBQywrZkFBNlA7O0FBRS9SOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSwrZkFBNlA7QUFDblE7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywrZkFBNlA7O0FBRXZSOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcz83MDE2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxM10udXNlWzFdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxM10udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzEzXS51c2VbMV0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzEzXS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTNdLnVzZVsxXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTNdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/globals.css\n"));

/***/ }),

/***/ "../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i1 = 0; i1 < lastIdentifiers.length; i1++){\n            const identifier = lastIdentifiers[i1];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ App; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"../../node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"../../node_modules/next-themes/dist/index.module.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/head */ \"../../node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction App(param) {\n    let { Component , pageProps  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_3___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"tldraw docs\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/tldraw/tldraw/apps/docs/pages/_app.tsx\",\n                        lineNumber: 10,\n                        columnNumber: 5\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        charSet: \"utf-8\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/tldraw/tldraw/apps/docs/pages/_app.tsx\",\n                        lineNumber: 11,\n                        columnNumber: 5\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"initial-scale=1.0, width=device-width\"\n                    }, void 0, false, {\n                        fileName: \"/Users/alex/tldraw/tldraw/apps/docs/pages/_app.tsx\",\n                        lineNumber: 12,\n                        columnNumber: 5\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/alex/tldraw/tldraw/apps/docs/pages/_app.tsx\",\n                lineNumber: 9,\n                columnNumber: 4\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"/Users/alex/tldraw/tldraw/apps/docs/pages/_app.tsx\",\n                lineNumber: 14,\n                columnNumber: 4\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/alex/tldraw/tldraw/apps/docs/pages/_app.tsx\",\n        lineNumber: 8,\n        columnNumber: 3\n    }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkI7QUFDYztBQUVmO0FBRWIsU0FBU0UsSUFBSSxLQUFrQyxFQUFFO1FBQXBDLEVBQUVDLFVBQVMsRUFBRUMsVUFBUyxFQUFZLEdBQWxDO0lBQzNCLHFCQUNDLDhEQUFDSixzREFBYUE7OzBCQUNiLDhEQUFDQyxrREFBSUE7O2tDQUNKLDhEQUFDSTtrQ0FBTTs7Ozs7O2tDQUNQLDhEQUFDQzt3QkFBS0MsU0FBUTs7Ozs7O2tDQUNkLDhEQUFDRDt3QkFBS0UsTUFBSzt3QkFBV0MsU0FBUTs7Ozs7Ozs7Ozs7OzBCQUUvQiw4REFBQ047Z0JBQVcsR0FBR0MsU0FBUzs7Ozs7Ozs7Ozs7O0FBRzNCLENBQUM7S0FYdUJGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAudHN4PzJmYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAL3N0eWxlcy9nbG9iYWxzLmNzcydcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICduZXh0LXRoZW1lcydcbmltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCdcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogQXBwUHJvcHMpIHtcblx0cmV0dXJuIChcblx0XHQ8VGhlbWVQcm92aWRlcj5cblx0XHRcdDxIZWFkPlxuXHRcdFx0XHQ8dGl0bGU+dGxkcmF3IGRvY3M8L3RpdGxlPlxuXHRcdFx0XHQ8bWV0YSBjaGFyU2V0PVwidXRmLThcIiAvPlxuXHRcdFx0XHQ8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwiaW5pdGlhbC1zY2FsZT0xLjAsIHdpZHRoPWRldmljZS13aWR0aFwiIC8+XG5cdFx0XHQ8L0hlYWQ+XG5cdFx0XHQ8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG5cdFx0PC9UaGVtZVByb3ZpZGVyPlxuXHQpXG59XG4iXSwibmFtZXMiOlsiVGhlbWVQcm92aWRlciIsIkhlYWQiLCJBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJ0aXRsZSIsIm1ldGEiLCJjaGFyU2V0IiwibmFtZSIsImNvbnRlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n"));

/***/ }),

/***/ "../../node_modules/next/head.js":
/*!***************************************!*\
  !*** ../../node_modules/next/head.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"../../node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvaGVhZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxSEFBa0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2hlYWQuanM/NmIzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9zaGFyZWQvbGliL2hlYWQnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/next/head.js\n"));

/***/ }),

/***/ "../../node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "../../node_modules/react/jsx-dev-runtime.js":
/*!***************************************************!*\
  !*** ../../node_modules/react/jsx-dev-runtime.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"../../node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsMkpBQXNFO0FBQ3hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzPzZjODMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("../../node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("../../node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);