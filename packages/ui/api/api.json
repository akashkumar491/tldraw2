{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.35.4",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@tldraw/ui!",
  "docComment": "",
  "name": "@tldraw/ui",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@tldraw/ui!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!BreakPointProvider:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function BreakPointProvider({ children }: "
            },
            {
              "kind": "Content",
              "text": "{\n    children: any;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useBreakpoint.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "BreakPointProvider"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/ui!Button:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Button: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLUiButtonProps",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/components/primitives/Button.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Button",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!compactMenuItems:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function compactMenuItems<T>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<T, false | null | undefined>[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "compactMenuItems"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/ui!ContextMenu:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ContextMenu: "
            },
            {
              "kind": "Content",
              "text": "({ children }: {\n    children: any;\n}) => "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/components/ContextMenu.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ContextMenu",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@tldraw/ui!Dialog:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "packages/ui/src/index.ts",
          "releaseTag": "None",
          "name": "Dialog",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!Dialog.Body:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Body({ className, children, style, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    className?: string;\n    children: any;\n    style?: "
                },
                {
                  "kind": "Reference",
                  "text": "React.CSSProperties",
                  "canonicalReference": "@types/react!React.CSSProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/Dialog.tsx",
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ className, children, style, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "Body"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!Dialog.CloseButton:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function CloseButton(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/Dialog.tsx",
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "CloseButton"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!Dialog.Footer:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Footer({ className, children }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    className?: string;\n    children: any;\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/Dialog.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ className, children }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Footer"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!Dialog.Header:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Header({ className, children }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    className?: string;\n    children: any;\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/Dialog.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ className, children }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Header"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!Dialog.Title:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Title({ className, children }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    className?: string;\n    children: any;\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/Dialog.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ className, children }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Title"
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@tldraw/ui!DropdownMenu:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "packages/ui/src/index.ts",
          "releaseTag": "None",
          "name": "DropdownMenu",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.CheckboxItem:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function CheckboxItem({ children, onSelect, ...rest }: "
                },
                {
                  "kind": "Reference",
                  "text": "DropdownMenuCheckboxItemProps",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuCheckboxItemProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ children, onSelect, ...rest }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "CheckboxItem"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.Content:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Content({ side, align, sideOffset, alignOffset, children, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    children: any;\n    alignOffset?: number;\n    sideOffset?: number;\n    align?: 'center' | 'end' | 'start';\n    side?: 'bottom' | 'left' | 'right' | 'top';\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ side, align, sideOffset, alignOffset, children, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Content"
            },
            {
              "kind": "Interface",
              "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuCheckboxItemProps:interface",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DropdownMenuCheckboxItemProps "
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "releaseTag": "Public",
              "name": "DropdownMenuCheckboxItemProps",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuCheckboxItemProps#checked:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "checked?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "checked",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuCheckboxItemProps#children:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "children: "
                    },
                    {
                      "kind": "Content",
                      "text": "any"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "children",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuCheckboxItemProps#disabled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disabled?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "disabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuCheckboxItemProps#onSelect:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onSelect?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(e: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Event",
                      "canonicalReference": "!Event:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onSelect",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuCheckboxItemProps#title:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "title: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "title",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuItemProps:interface",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DropdownMenuItemProps extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiButtonProps",
                  "canonicalReference": "@tldraw/ui!TLUiButtonProps:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "releaseTag": "Public",
              "name": "DropdownMenuItemProps",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuItemProps#noClose:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "noClose?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "noClose",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.Group:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Group({ children, size, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    children: any;\n    size?: 'medium' | 'small' | 'tiny' | 'wide';\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ children, size, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Group"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.Indicator:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Indicator(): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "Indicator"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.Item:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Item({ noClose, ...props }: "
                },
                {
                  "kind": "Reference",
                  "text": "DropdownMenuItemProps",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuItemProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ noClose, ...props }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Item"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.RadioItem:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function RadioItem({ children, onSelect, ...rest }: "
                },
                {
                  "kind": "Reference",
                  "text": "DropdownMenuCheckboxItemProps",
                  "canonicalReference": "@tldraw/ui!DropdownMenu.DropdownMenuCheckboxItemProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ children, onSelect, ...rest }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "RadioItem"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.Root:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Root({ id, children, modal, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    id: string;\n    children: any;\n    modal?: boolean;\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ id, children, modal, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Root"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.Sub:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Sub({ id, children }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    id: string;\n    children: any;\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ id, children }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Sub"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.SubContent:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function SubContent({ alignOffset, sideOffset, children, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    alignOffset?: number;\n    sideOffset?: number;\n    children: any;\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ alignOffset, sideOffset, children, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "SubContent"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.SubTrigger:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function SubTrigger({ label, 'data-testid': testId, 'data-direction': dataDirection, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    label: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    'data-testid'?: string;\n    'data-direction'?: 'left' | 'right';\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ label, 'data-testid': testId, 'data-direction': dataDirection, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "SubTrigger"
            },
            {
              "kind": "Function",
              "canonicalReference": "@tldraw/ui!DropdownMenu.Trigger:function(1)",
              "docComment": "/**\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function Trigger({ children, 'data-testid': testId, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    children: any;\n    'data-testid'?: string;\n}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "packages/ui/src/lib/components/primitives/DropdownMenu.tsx",
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ children, 'data-testid': testId, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "Trigger"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!findMenuItem:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function findMenuItem(menu: "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuChild",
              "canonicalReference": "@tldraw/ui!TLUiMenuChild:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "menu",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "findMenuItem"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/ui!Icon:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Icon: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLUiIconProps",
              "canonicalReference": "@tldraw/ui!TLUiIconProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/components/primitives/Icon.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Icon",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/ui!Input:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Input: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLUiInputProps",
              "canonicalReference": "@tldraw/ui!TLUiInputProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLInputElement",
              "canonicalReference": "!HTMLInputElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/components/primitives/Input.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Input",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!menuCustom:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function menuCustom(id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", opts?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonlyOk: boolean;\n    disabled: boolean;\n}>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    type: \"custom\";\n    disabled: boolean;\n    readonlyOk: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "opts",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "menuCustom"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!menuGroup:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function menuGroup(id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", ...children: "
            },
            {
              "kind": "Content",
              "text": "(false | null | "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuChild",
              "canonicalReference": "@tldraw/ui!TLUiMenuChild:type"
            },
            {
              "kind": "Content",
              "text": ")[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "null | "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuGroup",
              "canonicalReference": "@tldraw/ui!TLUiMenuGroup:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "children",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "menuGroup"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!menuItem:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function menuItem(actionItem: "
            },
            {
              "kind": "Reference",
              "text": "TLUiActionItem",
              "canonicalReference": "@tldraw/ui!TLUiActionItem:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolItem",
              "canonicalReference": "@tldraw/ui!TLUiToolItem:interface"
            },
            {
              "kind": "Content",
              "text": ", opts?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    checked: boolean;\n    disabled: boolean;\n}>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuItem",
              "canonicalReference": "@tldraw/ui!TLUiMenuItem:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "actionItem",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "opts",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "menuItem"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!menuSubmenu:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function menuSubmenu(id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", label: "
            },
            {
              "kind": "Reference",
              "text": "TLUiTranslationKey",
              "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
            },
            {
              "kind": "Content",
              "text": ", ...children: "
            },
            {
              "kind": "Content",
              "text": "(false | null | "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuChild",
              "canonicalReference": "@tldraw/ui!TLUiMenuChild:type"
            },
            {
              "kind": "Content",
              "text": ")[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "null | "
            },
            {
              "kind": "Reference",
              "text": "TLUiSubMenu",
              "canonicalReference": "@tldraw/ui!TLUiSubMenu:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "label",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "children",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "menuSubmenu"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/ui!TldrawUi:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TldrawUi: "
            },
            {
              "kind": "Reference",
              "text": "React.NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TldrawUiBaseProps",
              "canonicalReference": "@tldraw/ui!TldrawUiBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "TldrawUiContextProviderProps",
              "canonicalReference": "@tldraw/ui!TldrawUiContextProviderProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/TldrawUi.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TldrawUi",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TldrawUiBaseProps:interface",
          "docComment": "/**\n * Base props for the {@link @tldraw/tldraw#Tldraw} and {@link TldrawUi} components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TldrawUiBaseProps "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/TldrawUi.tsx",
          "releaseTag": "Public",
          "name": "TldrawUiBaseProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiBaseProps#children:member",
              "docComment": "/**\n * The component's children.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiBaseProps#hideUi:member",
              "docComment": "/**\n * Whether to hide the user interface and only display the canvas.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideUi?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hideUi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiBaseProps#renderDebugMenuItems:member",
              "docComment": "/**\n * Additional items to add to the debug menu (will be deprecated)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderDebugMenuItems?: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "renderDebugMenuItems",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiBaseProps#shareZone:member",
              "docComment": "/**\n * A component to use for the share zone (will be deprecated)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shareZone?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "shareZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiBaseProps#topZone:member",
              "docComment": "/**\n * A component to use for the top zone (will be deprecated)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topZone?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "topZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!TldrawUiContextProvider:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function TldrawUiContextProvider({ overrides, assetUrls, onUiEvent, children, }: "
            },
            {
              "kind": "Reference",
              "text": "TldrawUiContextProviderProps",
              "canonicalReference": "@tldraw/ui!TldrawUiContextProviderProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/TldrawUiContextProvider.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ overrides, assetUrls, onUiEvent, children, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "TldrawUiContextProvider"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TldrawUiContextProviderProps:interface",
          "docComment": "/**\n * Props for the {@link @tldraw/tldraw#Tldraw} and {@link TldrawUi} components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TldrawUiContextProviderProps "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/TldrawUiContextProvider.tsx",
          "releaseTag": "Public",
          "name": "TldrawUiContextProviderProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiContextProviderProps#assetUrls:member",
              "docComment": "/**\n * Urls for where to find fonts and other assets for the UI.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assetUrls?: "
                },
                {
                  "kind": "Reference",
                  "text": "RecursivePartial",
                  "canonicalReference": "@tldraw/utils!RecursivePartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUiAssetUrls",
                  "canonicalReference": "@tldraw/ui!~TLUiAssetUrls:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "assetUrls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiContextProviderProps#children:member",
              "docComment": "/**\n * The component's children.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiContextProviderProps#onUiEvent:member",
              "docComment": "/**\n * Callback for when an event occurs in the UI.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onUiEvent?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiEventHandler",
                  "canonicalReference": "@tldraw/ui!TLUiEventHandler:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onUiEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TldrawUiContextProviderProps#overrides:member",
              "docComment": "/**\n * Overrides for the UI.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiOverrides",
                  "canonicalReference": "@tldraw/ui!TLUiOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiOverrides",
                  "canonicalReference": "@tldraw/ui!TLUiOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "overrides",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TldrawUiProps:type",
          "docComment": "/**\n * Props for the {@link @tldraw/tldraw#Tldraw} and {@link TldrawUi} components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TldrawUiProps = "
            },
            {
              "kind": "Reference",
              "text": "TldrawUiBaseProps",
              "canonicalReference": "@tldraw/ui!TldrawUiBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "TldrawUiContextProviderProps",
              "canonicalReference": "@tldraw/ui!TldrawUiContextProviderProps:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/TldrawUi.tsx",
          "releaseTag": "Public",
          "name": "TldrawUiProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiActionItem:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiActionItem "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useActions.tsx",
          "releaseTag": "Public",
          "name": "TLUiActionItem",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#checkbox:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkbox?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "checkbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#contextMenuLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contextMenuLabel?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contextMenuLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#icon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icon?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiIconType",
                  "canonicalReference": "@tldraw/ui!TLUiIconType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#kbd:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kbd?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "kbd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#label:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#menuLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuLabel?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "menuLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#onSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelect: "
                },
                {
                  "kind": "Content",
                  "text": "(source: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiEventSource",
                  "canonicalReference": "@tldraw/ui!TLUiEventSource:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void> | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#readonlyOk:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonlyOk: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readonlyOk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#shortcutsLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shortcutsLabel?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "shortcutsLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiActionItem#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiActionsContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiActionsContextType = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "TLUiActionItem",
              "canonicalReference": "@tldraw/ui!TLUiActionItem:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useActions.tsx",
          "releaseTag": "Public",
          "name": "TLUiActionsContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiActionsMenuSchemaContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiActionsMenuSchemaContextType = "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useActionsMenuSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiActionsMenuSchemaContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiButtonProps:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiButtonProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/components/primitives/Button.tsx",
          "releaseTag": "Public",
          "name": "TLUiButtonProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#disabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#icon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icon?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiIconType",
                  "canonicalReference": "@tldraw/ui!TLUiIconType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#iconLeft:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconLeft?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiIconType",
                  "canonicalReference": "@tldraw/ui!TLUiIconType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iconLeft",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#invertIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "invertIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "invertIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#isChecked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isChecked?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#kbd:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kbd?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "kbd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#label:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#loading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loading?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#smallIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smallIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "smallIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#spinner:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spinner?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "spinner",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiButtonProps#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Content",
                  "text": "'danger' | 'normal' | 'primary'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiContextMenuProps:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiContextMenuProps "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/components/ContextMenu.tsx",
          "releaseTag": "Public",
          "name": "TLUiContextMenuProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiContextMenuProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiContextTTLUiMenuSchemaContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiContextTTLUiMenuSchemaContextType = "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useContextMenuSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiContextTTLUiMenuSchemaContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiCustomMenuItem:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiCustomMenuItem = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    type: 'custom';\n    disabled: boolean;\n    readonlyOk: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "releaseTag": "Public",
          "name": "TLUiCustomMenuItem",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiDialog:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiDialog "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useDialogsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiDialog",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiDialog#component:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "component: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiDialogProps",
                  "canonicalReference": "@tldraw/ui!TLUiDialogProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "component",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiDialog#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiDialog#onClose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClose?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onClose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiDialogProps:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiDialogProps "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useDialogsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiDialogProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiDialogProps#onClose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClose: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onClose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiDialogsContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiDialogsContextType = "
            },
            {
              "kind": "Content",
              "text": "{\n    addDialog: (dialog: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLUiDialog",
              "canonicalReference": "@tldraw/ui!TLUiDialog:interface"
            },
            {
              "kind": "Content",
              "text": ", 'id'> & {\n        id?: string;\n    }) => string;\n    removeDialog: (id: string) => string;\n    updateDialog: (id: string, newDialogData: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLUiDialog",
              "canonicalReference": "@tldraw/ui!TLUiDialog:interface"
            },
            {
              "kind": "Content",
              "text": ">) => string;\n    clearDialogs: () => void;\n    dialogs: "
            },
            {
              "kind": "Reference",
              "text": "TLUiDialog",
              "canonicalReference": "@tldraw/ui!TLUiDialog:interface"
            },
            {
              "kind": "Content",
              "text": "[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useDialogsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiDialogsContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiEventContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiEventContextType = "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventHandler",
              "canonicalReference": "@tldraw/ui!TLUiEventHandler:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventMap",
              "canonicalReference": "@tldraw/ui!~TLUiEventMap:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useEventsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiEventContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiEventHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiEventHandler<T extends "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventMap",
              "canonicalReference": "@tldraw/ui!~TLUiEventMap:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventMap",
              "canonicalReference": "@tldraw/ui!~TLUiEventMap:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(name: T, data: "
            },
            {
              "kind": "Reference",
              "text": "Join",
              "canonicalReference": "@tldraw/ui!~Join:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    source: "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventSource",
              "canonicalReference": "@tldraw/ui!TLUiEventSource:type"
            },
            {
              "kind": "Content",
              "text": ";\n}, "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventMap",
              "canonicalReference": "@tldraw/ui!~TLUiEventMap:interface"
            },
            {
              "kind": "Content",
              "text": "[T]>) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useEventsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiEventHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiEventSource:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiEventSource = "
            },
            {
              "kind": "Content",
              "text": "'actions-menu' | 'context-menu' | 'debug-panel' | 'dialog' | 'export-menu' | 'help-menu' | 'helper-buttons' | 'kbd' | 'menu' | 'navigation-zone' | 'page-menu' | 'people-menu' | 'quick-actions' | 'share-menu' | 'toolbar' | 'unknown' | 'zoom-menu'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useEventsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiEventSource",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiHelpMenuSchemaContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiHelpMenuSchemaContextType = "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useHelpMenuSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiHelpMenuSchemaContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiIconProps:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiIconProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLProps",
              "canonicalReference": "@types/react!React.HTMLProps:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/components/primitives/Icon.tsx",
          "releaseTag": "Public",
          "name": "TLUiIconProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiIconProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiIconProps#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiIconProps#crossOrigin:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "crossOrigin?: "
                },
                {
                  "kind": "Content",
                  "text": "'anonymous' | 'use-credentials'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "crossOrigin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiIconProps#icon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icon: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiIconType",
                  "canonicalReference": "@tldraw/ui!TLUiIconType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiIconProps#invertIcon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "invertIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "invertIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiIconProps#small:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "small?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "small",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiIconType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiIconType = "
            },
            {
              "kind": "Content",
              "text": "'align-bottom-center' | 'align-bottom-left' | 'align-bottom-right' | 'align-bottom' | 'align-center-center' | 'align-center-horizontal' | 'align-center-left' | 'align-center-right' | 'align-center-vertical' | 'align-left' | 'align-right' | 'align-top-center' | 'align-top-left' | 'align-top-right' | 'align-top' | 'arrow-left' | 'arrowhead-arrow' | 'arrowhead-bar' | 'arrowhead-diamond' | 'arrowhead-dot' | 'arrowhead-none' | 'arrowhead-square' | 'arrowhead-triangle-inverted' | 'arrowhead-triangle' | 'aspect-ratio' | 'avatar' | 'blob' | 'bring-forward' | 'bring-to-front' | 'check' | 'checkbox-checked' | 'checkbox-empty' | 'chevron-down' | 'chevron-left' | 'chevron-right' | 'chevron-up' | 'chevrons-ne' | 'chevrons-sw' | 'clipboard-copied' | 'clipboard-copy' | 'code' | 'collab' | 'color' | 'comment' | 'cross-2' | 'cross' | 'dash-dashed' | 'dash-dotted' | 'dash-draw' | 'dash-solid' | 'discord' | 'distribute-horizontal' | 'distribute-vertical' | 'dot' | 'dots-horizontal' | 'dots-vertical' | 'drag-handle-dots' | 'duplicate' | 'edit' | 'external-link' | 'file' | 'fill-none' | 'fill-pattern' | 'fill-semi' | 'fill-solid' | 'follow' | 'following' | 'font-draw' | 'font-mono' | 'font-sans' | 'font-serif' | 'geo-arrow-down' | 'geo-arrow-left' | 'geo-arrow-right' | 'geo-arrow-up' | 'geo-check-box' | 'geo-cloud' | 'geo-diamond' | 'geo-ellipse' | 'geo-hexagon' | 'geo-octagon' | 'geo-oval' | 'geo-pentagon' | 'geo-rectangle' | 'geo-rhombus-2' | 'geo-rhombus' | 'geo-star' | 'geo-trapezoid' | 'geo-triangle' | 'geo-x-box' | 'github' | 'group' | 'hidden' | 'image' | 'info-circle' | 'leading' | 'link' | 'lock-small' | 'lock' | 'menu' | 'minus' | 'mixed' | 'pack' | 'page' | 'plus' | 'question-mark-circle' | 'question-mark' | 'redo' | 'reset-zoom' | 'rotate-ccw' | 'rotate-cw' | 'ruler' | 'search' | 'send-backward' | 'send-to-back' | 'settings-horizontal' | 'settings-vertical-1' | 'settings-vertical' | 'share-1' | 'share-2' | 'size-extra-large' | 'size-large' | 'size-medium' | 'size-small' | 'spline-cubic' | 'spline-line' | 'stack-horizontal' | 'stack-vertical' | 'stretch-horizontal' | 'stretch-vertical' | 'text-align-center' | 'text-align-justify' | 'text-align-left' | 'text-align-right' | 'tool-arrow' | 'tool-embed' | 'tool-eraser' | 'tool-frame' | 'tool-hand' | 'tool-highlight' | 'tool-laser' | 'tool-line' | 'tool-media' | 'tool-note' | 'tool-pencil' | 'tool-pointer' | 'tool-text' | 'trash' | 'triangle-down' | 'triangle-up' | 'twitter' | 'undo' | 'ungroup' | 'unlock-small' | 'unlock' | 'vertical-align-center' | 'vertical-align-end' | 'vertical-align-start' | 'visible' | 'warning-triangle' | 'zoom-in' | 'zoom-out'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/icon-types.ts",
          "releaseTag": "Public",
          "name": "TLUiIconType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiInputProps:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiInputProps "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/components/primitives/Input.tsx",
          "releaseTag": "Public",
          "name": "TLUiInputProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#autofocus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autofocus?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autofocus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#autoselect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoselect?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoselect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#className:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#defaultValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultValue?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#disabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#icon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icon?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiIconType",
                  "canonicalReference": "@tldraw/ui!TLUiIconType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#iconLeft:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iconLeft?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiIconType",
                  "canonicalReference": "@tldraw/ui!TLUiIconType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iconLeft",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#label:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#onBlur:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBlur?: "
                },
                {
                  "kind": "Content",
                  "text": "(value: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onBlur",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#onCancel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCancel?: "
                },
                {
                  "kind": "Content",
                  "text": "(value: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onCancel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#onComplete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onComplete?: "
                },
                {
                  "kind": "Content",
                  "text": "(value: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onComplete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#onValueChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onValueChange?: "
                },
                {
                  "kind": "Content",
                  "text": "(value: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onValueChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#placeholder:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "placeholder?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "placeholder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#shouldManuallyMaintainScrollPositionWhenFocused:member",
              "docComment": "/**\n * Usually on iOS when you focus an input, the browser will adjust the viewport to bring the input into view. Sometimes this doesn't work properly though - for example, if the input is newly created, iOS seems to have a hard time adjusting the viewport for it. This prop allows you to opt-in to some extra code to manually bring the input into view when the visual viewport of the browser changes, but we don't want to use it everywhere because generally the native behavior looks nicer in scenarios where it's sufficient.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shouldManuallyMaintainScrollPositionWhenFocused?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "shouldManuallyMaintainScrollPositionWhenFocused",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiInputProps#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiKeyboardShortcutsSchemaContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiKeyboardShortcutsSchemaContextType = "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useKeyboardShortcutsSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiKeyboardShortcutsSchemaContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiKeyboardShortcutsSchemaProviderProps:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiKeyboardShortcutsSchemaProviderProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    overrides?: (editor: "
            },
            {
              "kind": "Reference",
              "text": "Editor",
              "canonicalReference": "@tldraw/editor!Editor:class"
            },
            {
              "kind": "Content",
              "text": ", schema: "
            },
            {
              "kind": "Reference",
              "text": "TLUiKeyboardShortcutsSchemaContextType",
              "canonicalReference": "@tldraw/ui!TLUiKeyboardShortcutsSchemaContextType:type"
            },
            {
              "kind": "Content",
              "text": ", more: {\n        tools: "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolsContextType",
              "canonicalReference": "@tldraw/ui!TLUiToolsContextType:type"
            },
            {
              "kind": "Content",
              "text": ";\n        actions: "
            },
            {
              "kind": "Reference",
              "text": "TLUiActionsContextType",
              "canonicalReference": "@tldraw/ui!TLUiActionsContextType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    }) => "
            },
            {
              "kind": "Reference",
              "text": "TLUiKeyboardShortcutsSchemaContextType",
              "canonicalReference": "@tldraw/ui!TLUiKeyboardShortcutsSchemaContextType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    children: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useKeyboardShortcutsSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiKeyboardShortcutsSchemaProviderProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiMenuChild:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiMenuChild = "
            },
            {
              "kind": "Reference",
              "text": "TLUiCustomMenuItem",
              "canonicalReference": "@tldraw/ui!TLUiCustomMenuItem:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuGroup",
              "canonicalReference": "@tldraw/ui!TLUiMenuGroup:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuItem",
              "canonicalReference": "@tldraw/ui!TLUiMenuItem:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLUiSubMenu",
              "canonicalReference": "@tldraw/ui!TLUiSubMenu:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "releaseTag": "Public",
          "name": "TLUiMenuChild",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiMenuGroup:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiMenuGroup = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    type: 'group';\n    checkbox: boolean;\n    disabled: boolean;\n    readonlyOk: boolean;\n    children: "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuChild",
              "canonicalReference": "@tldraw/ui!TLUiMenuChild:type"
            },
            {
              "kind": "Content",
              "text": "[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "releaseTag": "Public",
          "name": "TLUiMenuGroup",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiMenuItem:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiMenuItem = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    type: 'item';\n    readonlyOk: boolean;\n    actionItem: "
            },
            {
              "kind": "Reference",
              "text": "TLUiActionItem",
              "canonicalReference": "@tldraw/ui!TLUiActionItem:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    disabled: boolean;\n    checked: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "releaseTag": "Public",
          "name": "TLUiMenuItem",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiMenuSchema = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "TLUiCustomMenuItem",
              "canonicalReference": "@tldraw/ui!TLUiCustomMenuItem:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuGroup",
              "canonicalReference": "@tldraw/ui!TLUiMenuGroup:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuItem",
              "canonicalReference": "@tldraw/ui!TLUiMenuItem:type"
            },
            {
              "kind": "Content",
              "text": ")[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "releaseTag": "Public",
          "name": "TLUiMenuSchema",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiMenuSchemaContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiMenuSchemaContextType = "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useMenuSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiMenuSchemaContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiMenuSchemaProviderProps:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiMenuSchemaProviderProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    overrides?: (editor: "
            },
            {
              "kind": "Reference",
              "text": "Editor",
              "canonicalReference": "@tldraw/editor!Editor:class"
            },
            {
              "kind": "Content",
              "text": ", schema: "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchemaContextType",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchemaContextType:type"
            },
            {
              "kind": "Content",
              "text": ", helpers: {\n        actions: "
            },
            {
              "kind": "Reference",
              "text": "ReturnType",
              "canonicalReference": "!ReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "useActions",
              "canonicalReference": "@tldraw/ui!useActions:function"
            },
            {
              "kind": "Content",
              "text": ">;\n        noneSelected: boolean;\n        oneSelected: boolean;\n        twoSelected: boolean;\n        threeSelected: boolean;\n    }) => "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchemaContextType",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchemaContextType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    children: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useMenuSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiMenuSchemaProviderProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiOverrides:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiOverrides "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/overrides.ts",
          "releaseTag": "Public",
          "name": "TLUiOverrides",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#actions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actions?: "
                },
                {
                  "kind": "Reference",
                  "text": "WithDefaultHelpers",
                  "canonicalReference": "@tldraw/ui!~WithDefaultHelpers:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ActionsProviderProps",
                  "canonicalReference": "@tldraw/ui!~ActionsProviderProps:type"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "actions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#actionsMenu:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actionsMenu?: "
                },
                {
                  "kind": "Reference",
                  "text": "WithDefaultHelpers",
                  "canonicalReference": "@tldraw/ui!~WithDefaultHelpers:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ActionsMenuSchemaProviderProps",
                  "canonicalReference": "@tldraw/ui!~ActionsMenuSchemaProviderProps:type"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "actionsMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#contextMenu:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contextMenu?: "
                },
                {
                  "kind": "Reference",
                  "text": "WithDefaultHelpers",
                  "canonicalReference": "@tldraw/ui!~WithDefaultHelpers:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUiContextMenuSchemaProviderProps",
                  "canonicalReference": "@tldraw/ui!~TLUiContextMenuSchemaProviderProps:type"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contextMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#helpMenu:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "helpMenu?: "
                },
                {
                  "kind": "Reference",
                  "text": "WithDefaultHelpers",
                  "canonicalReference": "@tldraw/ui!~WithDefaultHelpers:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUiHelpMenuSchemaProviderProps",
                  "canonicalReference": "@tldraw/ui!~TLUiHelpMenuSchemaProviderProps:type"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "helpMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#keyboardShortcutsMenu:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyboardShortcutsMenu?: "
                },
                {
                  "kind": "Reference",
                  "text": "WithDefaultHelpers",
                  "canonicalReference": "@tldraw/ui!~WithDefaultHelpers:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUiKeyboardShortcutsSchemaProviderProps",
                  "canonicalReference": "@tldraw/ui!TLUiKeyboardShortcutsSchemaProviderProps:type"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyboardShortcutsMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#menu:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menu?: "
                },
                {
                  "kind": "Reference",
                  "text": "WithDefaultHelpers",
                  "canonicalReference": "@tldraw/ui!~WithDefaultHelpers:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUiMenuSchemaProviderProps",
                  "canonicalReference": "@tldraw/ui!TLUiMenuSchemaProviderProps:type"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "menu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#toolbar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toolbar?: "
                },
                {
                  "kind": "Reference",
                  "text": "WithDefaultHelpers",
                  "canonicalReference": "@tldraw/ui!~WithDefaultHelpers:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUiToolbarSchemaProviderProps",
                  "canonicalReference": "@tldraw/ui!~TLUiToolbarSchemaProviderProps:type"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "toolbar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#tools:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tools?: "
                },
                {
                  "kind": "Reference",
                  "text": "WithDefaultHelpers",
                  "canonicalReference": "@tldraw/ui!~WithDefaultHelpers:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUiToolsProviderProps",
                  "canonicalReference": "@tldraw/ui!TLUiToolsProviderProps:type"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tools",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiOverrides#translations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translations?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationProviderProps",
                  "canonicalReference": "@tldraw/ui!~TLUiTranslationProviderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "['overrides']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "translations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiSubMenu:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiSubMenu = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    type: 'submenu';\n    label: "
            },
            {
              "kind": "Reference",
              "text": "TLUiTranslationKey",
              "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
            },
            {
              "kind": "Content",
              "text": ";\n    disabled: boolean;\n    readonlyOk: boolean;\n    children: "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuChild",
              "canonicalReference": "@tldraw/ui!TLUiMenuChild:type"
            },
            {
              "kind": "Content",
              "text": "[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/menuHelpers.ts",
          "releaseTag": "Public",
          "name": "TLUiSubMenu",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiToast:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiToast "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useToastsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiToast",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToast#actions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiToastAction",
                  "canonicalReference": "@tldraw/ui!TLUiToastAction:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "actions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToast#closeLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "closeLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "closeLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToast#description:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToast#icon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icon?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToast#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToast#keepOpen:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keepOpen?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keepOpen",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToast#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiToastAction:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiToastAction "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useToastsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiToastAction",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToastAction#label:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToastAction#onClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClick: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToastAction#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "'primary' | 'secondary' | 'warn'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiToastsContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiToastsContextType = "
            },
            {
              "kind": "Content",
              "text": "{\n    addToast: (toast: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLUiToast",
              "canonicalReference": "@tldraw/ui!TLUiToast:interface"
            },
            {
              "kind": "Content",
              "text": ", 'id'> & {\n        id?: string;\n    }) => string;\n    removeToast: (id: "
            },
            {
              "kind": "Reference",
              "text": "TLUiToast",
              "canonicalReference": "@tldraw/ui!TLUiToast:interface"
            },
            {
              "kind": "Content",
              "text": "['id']) => string;\n    clearToasts: () => void;\n    toasts: "
            },
            {
              "kind": "Reference",
              "text": "TLUiToast",
              "canonicalReference": "@tldraw/ui!TLUiToast:interface"
            },
            {
              "kind": "Content",
              "text": "[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useToastsProvider.tsx",
          "releaseTag": "Public",
          "name": "TLUiToastsContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiToolbarItem:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiToolbarItem = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    type: 'item';\n    readonlyOk: boolean;\n    toolItem: "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolItem",
              "canonicalReference": "@tldraw/ui!TLUiToolItem:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useToolbarSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiToolbarItem",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiToolbarSchemaContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiToolbarSchemaContextType = "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolbarItem",
              "canonicalReference": "@tldraw/ui!TLUiToolbarItem:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useToolbarSchema.tsx",
          "releaseTag": "Public",
          "name": "TLUiToolbarSchemaContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/ui!TLUiToolItem:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUiToolItem "
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useTools.tsx",
          "releaseTag": "Public",
          "name": "TLUiToolItem",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToolItem#icon:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icon: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiIconType",
                  "canonicalReference": "@tldraw/ui!TLUiIconType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToolItem#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToolItem#kbd:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kbd?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "kbd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToolItem#label:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToolItem#meta:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "meta?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "meta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToolItem#onSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelect: "
                },
                {
                  "kind": "Content",
                  "text": "(source: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiEventSource",
                  "canonicalReference": "@tldraw/ui!TLUiEventSource:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToolItem#readonlyOk:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonlyOk: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readonlyOk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/ui!TLUiToolItem#shortcutsLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shortcutsLabel?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUiTranslationKey",
                  "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "shortcutsLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiToolsContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiToolsContextType = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolItem",
              "canonicalReference": "@tldraw/ui!TLUiToolItem:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useTools.tsx",
          "releaseTag": "Public",
          "name": "TLUiToolsContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiToolsProviderProps:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiToolsProviderProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    overrides?: (editor: "
            },
            {
              "kind": "Reference",
              "text": "Editor",
              "canonicalReference": "@tldraw/editor!Editor:class"
            },
            {
              "kind": "Content",
              "text": ", tools: "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolsContextType",
              "canonicalReference": "@tldraw/ui!TLUiToolsContextType:type"
            },
            {
              "kind": "Content",
              "text": ", helpers: {\n        insertMedia: () => void;\n    }) => "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolsContextType",
              "canonicalReference": "@tldraw/ui!TLUiToolsContextType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    children: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useTools.tsx",
          "releaseTag": "Public",
          "name": "TLUiToolsProviderProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiTranslation:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiTranslation = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly locale: string;\n    readonly label: string;\n    readonly messages: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLUiTranslationKey",
              "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
            },
            {
              "kind": "Content",
              "text": ", string>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useTranslation/translations.ts",
          "releaseTag": "Public",
          "name": "TLUiTranslation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiTranslationContextType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiTranslationContextType = "
            },
            {
              "kind": "Reference",
              "text": "TLUiTranslation",
              "canonicalReference": "@tldraw/ui!TLUiTranslation:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useTranslation/useTranslation.tsx",
          "releaseTag": "Public",
          "name": "TLUiTranslationContextType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLUiTranslationKey = "
            },
            {
              "kind": "Content",
              "text": "'action.align-bottom' | 'action.align-center-horizontal.short' | 'action.align-center-horizontal' | 'action.align-center-vertical.short' | 'action.align-center-vertical' | 'action.align-left' | 'action.align-right' | 'action.align-top' | 'action.back-to-content' | 'action.bring-forward' | 'action.bring-to-front' | 'action.convert-to-bookmark' | 'action.convert-to-embed' | 'action.copy-as-json.short' | 'action.copy-as-json' | 'action.copy-as-png.short' | 'action.copy-as-png' | 'action.copy-as-svg.short' | 'action.copy-as-svg' | 'action.copy' | 'action.cut' | 'action.delete' | 'action.distribute-horizontal.short' | 'action.distribute-horizontal' | 'action.distribute-vertical.short' | 'action.distribute-vertical' | 'action.duplicate' | 'action.edit-link' | 'action.exit-pen-mode' | 'action.export-as-json.short' | 'action.export-as-json' | 'action.export-as-png.short' | 'action.export-as-png' | 'action.export-as-svg.short' | 'action.export-as-svg' | 'action.flip-horizontal.short' | 'action.flip-horizontal' | 'action.flip-vertical.short' | 'action.flip-vertical' | 'action.fork-project' | 'action.group' | 'action.insert-embed' | 'action.insert-media' | 'action.leave-shared-project' | 'action.new-project' | 'action.new-shared-project' | 'action.open-cursor-chat' | 'action.open-embed-link' | 'action.open-file' | 'action.pack' | 'action.paste' | 'action.print' | 'action.redo' | 'action.rotate-ccw' | 'action.rotate-cw' | 'action.save-copy' | 'action.select-all' | 'action.select-none' | 'action.send-backward' | 'action.send-to-back' | 'action.share-project' | 'action.stack-horizontal.short' | 'action.stack-horizontal' | 'action.stack-vertical.short' | 'action.stack-vertical' | 'action.stop-following' | 'action.stretch-horizontal.short' | 'action.stretch-horizontal' | 'action.stretch-vertical.short' | 'action.stretch-vertical' | 'action.toggle-auto-size' | 'action.toggle-dark-mode.menu' | 'action.toggle-dark-mode' | 'action.toggle-debug-mode.menu' | 'action.toggle-debug-mode' | 'action.toggle-focus-mode.menu' | 'action.toggle-focus-mode' | 'action.toggle-grid.menu' | 'action.toggle-grid' | 'action.toggle-lock' | 'action.toggle-reduce-motion.menu' | 'action.toggle-reduce-motion' | 'action.toggle-snap-mode.menu' | 'action.toggle-snap-mode' | 'action.toggle-tool-lock.menu' | 'action.toggle-tool-lock' | 'action.toggle-transparent.context-menu' | 'action.toggle-transparent.menu' | 'action.toggle-transparent' | 'action.undo' | 'action.ungroup' | 'action.zoom-in' | 'action.zoom-out' | 'action.zoom-to-100' | 'action.zoom-to-fit' | 'action.zoom-to-selection' | 'actions-menu.title' | 'align-style.end' | 'align-style.justify' | 'align-style.middle' | 'align-style.start' | 'arrowheadEnd-style.arrow' | 'arrowheadEnd-style.bar' | 'arrowheadEnd-style.diamond' | 'arrowheadEnd-style.dot' | 'arrowheadEnd-style.inverted' | 'arrowheadEnd-style.none' | 'arrowheadEnd-style.pipe' | 'arrowheadEnd-style.square' | 'arrowheadEnd-style.triangle' | 'arrowheadStart-style.arrow' | 'arrowheadStart-style.bar' | 'arrowheadStart-style.diamond' | 'arrowheadStart-style.dot' | 'arrowheadStart-style.inverted' | 'arrowheadStart-style.none' | 'arrowheadStart-style.pipe' | 'arrowheadStart-style.square' | 'arrowheadStart-style.triangle' | 'color-style.black' | 'color-style.blue' | 'color-style.green' | 'color-style.grey' | 'color-style.light-blue' | 'color-style.light-green' | 'color-style.light-red' | 'color-style.light-violet' | 'color-style.orange' | 'color-style.red' | 'color-style.violet' | 'color-style.yellow' | 'context-menu.arrange' | 'context-menu.copy-as' | 'context-menu.export-as' | 'context-menu.move-to-page' | 'context-menu.reorder' | 'context.pages.new-page' | 'cursor-chat.type-to-chat' | 'dash-style.dashed' | 'dash-style.dotted' | 'dash-style.draw' | 'dash-style.solid' | 'debug-panel.more' | 'edit-link-dialog.cancel' | 'edit-link-dialog.clear' | 'edit-link-dialog.detail' | 'edit-link-dialog.invalid-url' | 'edit-link-dialog.save' | 'edit-link-dialog.title' | 'edit-link-dialog.url' | 'edit-pages-dialog.move-down' | 'edit-pages-dialog.move-up' | 'embed-dialog.back' | 'embed-dialog.cancel' | 'embed-dialog.create' | 'embed-dialog.instruction' | 'embed-dialog.invalid-url' | 'embed-dialog.title' | 'embed-dialog.url' | 'file-system.confirm-clear.cancel' | 'file-system.confirm-clear.continue' | 'file-system.confirm-clear.description' | 'file-system.confirm-clear.dont-show-again' | 'file-system.confirm-clear.title' | 'file-system.confirm-open.cancel' | 'file-system.confirm-open.description' | 'file-system.confirm-open.dont-show-again' | 'file-system.confirm-open.open' | 'file-system.confirm-open.title' | 'file-system.file-open-error.file-format-version-too-new' | 'file-system.file-open-error.generic-corrupted-file' | 'file-system.file-open-error.not-a-tldraw-file' | 'file-system.file-open-error.title' | 'file-system.shared-document-file-open-error.description' | 'file-system.shared-document-file-open-error.title' | 'fill-style.none' | 'fill-style.pattern' | 'fill-style.semi' | 'fill-style.solid' | 'focus-mode.toggle-focus-mode' | 'font-style.draw' | 'font-style.mono' | 'font-style.sans' | 'font-style.serif' | 'geo-style.arrow-down' | 'geo-style.arrow-left' | 'geo-style.arrow-right' | 'geo-style.arrow-up' | 'geo-style.check-box' | 'geo-style.cloud' | 'geo-style.diamond' | 'geo-style.ellipse' | 'geo-style.hexagon' | 'geo-style.octagon' | 'geo-style.oval' | 'geo-style.pentagon' | 'geo-style.rectangle' | 'geo-style.rhombus-2' | 'geo-style.rhombus' | 'geo-style.star' | 'geo-style.trapezoid' | 'geo-style.triangle' | 'geo-style.x-box' | 'help-menu.about' | 'help-menu.discord' | 'help-menu.github' | 'help-menu.keyboard-shortcuts' | 'help-menu.title' | 'help-menu.twitter' | 'home-project-dialog.description' | 'home-project-dialog.ok' | 'home-project-dialog.title' | 'menu.copy-as' | 'menu.edit' | 'menu.export-as' | 'menu.file' | 'menu.language' | 'menu.preferences' | 'menu.title' | 'menu.view' | 'navigation-zone.toggle-minimap' | 'navigation-zone.zoom' | 'opacity-style.0.1' | 'opacity-style.0.25' | 'opacity-style.0.5' | 'opacity-style.0.75' | 'opacity-style.1' | 'page-menu.create-new-page' | 'page-menu.edit-done' | 'page-menu.edit-start' | 'page-menu.go-to-page' | 'page-menu.max-page-count-reached' | 'page-menu.new-page-initial-name' | 'page-menu.submenu.delete' | 'page-menu.submenu.duplicate-page' | 'page-menu.submenu.move-down' | 'page-menu.submenu.move-up' | 'page-menu.submenu.rename' | 'page-menu.submenu.title' | 'page-menu.title' | 'people-menu.change-color' | 'people-menu.change-name' | 'people-menu.follow' | 'people-menu.following' | 'people-menu.invite' | 'people-menu.leading' | 'people-menu.title' | 'people-menu.user' | 'rename-project-dialog.cancel' | 'rename-project-dialog.rename' | 'rename-project-dialog.title' | 'share-menu.copy-link-note' | 'share-menu.copy-link' | 'share-menu.copy-readonly-link-note' | 'share-menu.copy-readonly-link' | 'share-menu.create-snapshot-link' | 'share-menu.default-project-name' | 'share-menu.fork-note' | 'share-menu.offline-note' | 'share-menu.project-too-large' | 'share-menu.readonly-link' | 'share-menu.save-note' | 'share-menu.share-project' | 'share-menu.snapshot-link-note' | 'share-menu.title' | 'share-menu.upload-failed' | 'sharing.confirm-leave.cancel' | 'sharing.confirm-leave.description' | 'sharing.confirm-leave.dont-show-again' | 'sharing.confirm-leave.leave' | 'sharing.confirm-leave.title' | 'shortcuts-dialog.collaboration' | 'shortcuts-dialog.edit' | 'shortcuts-dialog.file' | 'shortcuts-dialog.preferences' | 'shortcuts-dialog.title' | 'shortcuts-dialog.tools' | 'shortcuts-dialog.transform' | 'shortcuts-dialog.view' | 'size-style.l' | 'size-style.m' | 'size-style.s' | 'size-style.xl' | 'spline-style.cubic' | 'spline-style.line' | 'style-panel.align' | 'style-panel.arrowhead-end' | 'style-panel.arrowhead-start' | 'style-panel.arrowheads' | 'style-panel.color' | 'style-panel.dash' | 'style-panel.fill' | 'style-panel.font' | 'style-panel.geo' | 'style-panel.mixed' | 'style-panel.opacity' | 'style-panel.position' | 'style-panel.size' | 'style-panel.spline' | 'style-panel.title' | 'style-panel.vertical-align' | 'toast.close' | 'toast.error.copy-fail.desc' | 'toast.error.copy-fail.title' | 'toast.error.export-fail.desc' | 'toast.error.export-fail.title' | 'tool-panel.drawing' | 'tool-panel.more' | 'tool-panel.shapes' | 'tool.arrow-down' | 'tool.arrow-left' | 'tool.arrow-right' | 'tool.arrow-up' | 'tool.arrow' | 'tool.asset' | 'tool.check-box' | 'tool.diamond' | 'tool.draw' | 'tool.ellipse' | 'tool.embed' | 'tool.eraser' | 'tool.frame' | 'tool.hand' | 'tool.hexagon' | 'tool.highlight' | 'tool.laser' | 'tool.line' | 'tool.note' | 'tool.octagon' | 'tool.oval' | 'tool.pentagon' | 'tool.rectangle' | 'tool.rhombus' | 'tool.select' | 'tool.star' | 'tool.text' | 'tool.trapezoid' | 'tool.triangle' | 'tool.x-box' | 'vscode.file-open.backup-failed' | 'vscode.file-open.backup-saved' | 'vscode.file-open.backup' | 'vscode.file-open.desc' | 'vscode.file-open.dont-show-again' | 'vscode.file-open.open'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useTranslation/TLUiTranslationKey.ts",
          "releaseTag": "Public",
          "name": "TLUiTranslationKey",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!toolbarItem:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toolbarItem(toolItem: "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolItem",
              "canonicalReference": "@tldraw/ui!TLUiToolItem:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolbarItem",
              "canonicalReference": "@tldraw/ui!TLUiToolbarItem:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useToolbarSchema.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "toolItem",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "toolbarItem"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useActions:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useActions(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiActionsContextType",
              "canonicalReference": "@tldraw/ui!TLUiActionsContextType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useActions.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useActions"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useActionsMenuSchema:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useActionsMenuSchema(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useActionsMenuSchema.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useActionsMenuSchema"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useBreakpoint:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useBreakpoint(): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useBreakpoint.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useBreakpoint"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useCanRedo:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCanRedo(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useCanRedo.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useCanRedo"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useCanUndo:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCanUndo(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useCanUndo.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useCanUndo"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useContextMenuSchema:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useContextMenuSchema(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useContextMenuSchema.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useContextMenuSchema"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useCopyAs:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCopyAs(): "
            },
            {
              "kind": "Content",
              "text": "(ids?: "
            },
            {
              "kind": "Reference",
              "text": "TLShapeId",
              "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
            },
            {
              "kind": "Content",
              "text": "[], format?: "
            },
            {
              "kind": "Reference",
              "text": "TLCopyType",
              "canonicalReference": "@tldraw/editor!TLCopyType:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useCopyAs.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useCopyAs"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useDefaultHelpers:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDefaultHelpers(): "
            },
            {
              "kind": "Content",
              "text": "{\n    addToast: (toast: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"./hooks/useToastsProvider\")."
            },
            {
              "kind": "Reference",
              "text": "TLUiToast",
              "canonicalReference": "@tldraw/ui!TLUiToast:interface"
            },
            {
              "kind": "Content",
              "text": ", \"id\"> & {\n        id?: string | undefined;\n    }) => string;\n    removeToast: (id: string) => string;\n    clearToasts: () => void;\n    addDialog: (dialog: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"./hooks/useDialogsProvider\")."
            },
            {
              "kind": "Reference",
              "text": "TLUiDialog",
              "canonicalReference": "@tldraw/ui!TLUiDialog:interface"
            },
            {
              "kind": "Content",
              "text": ", \"id\"> & {\n        id?: string | undefined;\n    }) => string;\n    clearDialogs: () => void;\n    removeDialog: (id: string) => string;\n    updateDialog: (id: string, newDialogData: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"./hooks/useDialogsProvider\")."
            },
            {
              "kind": "Reference",
              "text": "TLUiDialog",
              "canonicalReference": "@tldraw/ui!TLUiDialog:interface"
            },
            {
              "kind": "Content",
              "text": ">) => string;\n    msg: (id: import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "TLUiTranslationKey",
              "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
            },
            {
              "kind": "Content",
              "text": ") => string;\n    isMobile: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/overrides.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useDefaultHelpers"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useDialogs:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDialogs(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiDialogsContextType",
              "canonicalReference": "@tldraw/ui!TLUiDialogsContextType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useDialogsProvider.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useDialogs"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useEvents:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useEvents(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventContextType",
              "canonicalReference": "@tldraw/ui!TLUiEventContextType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useEventsProvider.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useEvents"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useExportAs:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useExportAs(): "
            },
            {
              "kind": "Content",
              "text": "(ids?: "
            },
            {
              "kind": "Reference",
              "text": "TLShapeId",
              "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
            },
            {
              "kind": "Content",
              "text": "[], format?: "
            },
            {
              "kind": "Reference",
              "text": "TLExportType",
              "canonicalReference": "@tldraw/editor!TLExportType:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useExportAs.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useExportAs"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useHelpMenuSchema:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useHelpMenuSchema(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useHelpMenuSchema.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useHelpMenuSchema"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useKeyboardShortcuts:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useKeyboardShortcuts(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useKeyboardShortcuts.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useKeyboardShortcuts"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useKeyboardShortcutsSchema:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useKeyboardShortcutsSchema(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiKeyboardShortcutsSchemaContextType",
              "canonicalReference": "@tldraw/ui!TLUiKeyboardShortcutsSchemaContextType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useKeyboardShortcutsSchema.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useKeyboardShortcutsSchema"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useLocalStorageState:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useLocalStorageState<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ">(key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", defaultValue: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly [T, (setter: ((value: T) => T) | T) => void]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useLocalStorageState.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "defaultValue",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "useLocalStorageState"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useMenuClipboardEvents:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useMenuClipboardEvents(): "
            },
            {
              "kind": "Content",
              "text": "{\n    copy: (source: "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventSource",
              "canonicalReference": "@tldraw/ui!TLUiEventSource:type"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    cut: (source: "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventSource",
              "canonicalReference": "@tldraw/ui!TLUiEventSource:type"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    paste: (data: "
            },
            {
              "kind": "Reference",
              "text": "ClipboardItem",
              "canonicalReference": "!ClipboardItem:interface"
            },
            {
              "kind": "Content",
              "text": "[] | "
            },
            {
              "kind": "Reference",
              "text": "DataTransfer",
              "canonicalReference": "!DataTransfer:interface"
            },
            {
              "kind": "Content",
              "text": ", source: "
            },
            {
              "kind": "Reference",
              "text": "TLUiEventSource",
              "canonicalReference": "@tldraw/ui!TLUiEventSource:type"
            },
            {
              "kind": "Content",
              "text": ", point?: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/primitives!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useClipboardEvents.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useMenuClipboardEvents"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useMenuIsOpen:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useMenuIsOpen(id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", cb?: "
            },
            {
              "kind": "Content",
              "text": "(isOpen: boolean) => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly [boolean, (isOpen: boolean) => void]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useMenuIsOpen.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "cb",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "useMenuIsOpen"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useMenuSchema:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useMenuSchema(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiMenuSchema",
              "canonicalReference": "@tldraw/ui!TLUiMenuSchema:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useMenuSchema.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useMenuSchema"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useNativeClipboardEvents:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useNativeClipboardEvents(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useClipboardEvents.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useNativeClipboardEvents"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useReadonly:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useReadonly(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useReadonly.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useReadonly"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useToasts:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useToasts(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiToastsContextType",
              "canonicalReference": "@tldraw/ui!TLUiToastsContextType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useToastsProvider.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useToasts"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useToolbarSchema:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useToolbarSchema(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolbarSchemaContextType",
              "canonicalReference": "@tldraw/ui!TLUiToolbarSchemaContextType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useToolbarSchema.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useToolbarSchema"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useTools:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTools(): "
            },
            {
              "kind": "Reference",
              "text": "TLUiToolsContextType",
              "canonicalReference": "@tldraw/ui!TLUiToolsContextType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useTools.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useTools"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/ui!useTranslation:function(1)",
          "docComment": "/**\n * Returns a function to translate a translation key into a string based on the current translation.\n *\n * @example\n * ```ts\n * const msg = useTranslation()\n * const label = msg('style-panel.styles')\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTranslation(): "
            },
            {
              "kind": "Content",
              "text": "(id: "
            },
            {
              "kind": "Reference",
              "text": "TLUiTranslationKey",
              "canonicalReference": "@tldraw/ui!TLUiTranslationKey:type"
            },
            {
              "kind": "Content",
              "text": ") => string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/ui/src/lib/hooks/useTranslation/useTranslation.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useTranslation"
        }
      ]
    }
  ]
}
